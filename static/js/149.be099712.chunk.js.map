{"version":3,"file":"static/js/149.be099712.chunk.js","mappings":"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","sources":["components/Forms/Buttons.styles.jsx","components/Forms/Forms.styled.jsx","components/Forms/TextInputLiveFeedback/TextInputLiveFeedback.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Forms/FormLogin/FormLogin.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  margin-right: 12px;\n  border: none;\n  border-radius: 4px;\n  background-color: transparent;\n  cursor: pointer;\n \n  &:hover {\n    color: white;\n    background-color: #f44336;\n  }\n\n  &:active {\n    color: white;\n    background-color: red;\n  }\n`\nexport const ButtonDelete = styled(Button)`\n  color: #f44336;\n`\n\nexport const ButtonEdit = styled(Button)`\n  color: #1976d2;\n`\n\nexport const ButtonAddContact = styled(Button)`\n  width: 150px;\n  justify-content: space-around;\n  color: green;\n  background-color: #e2e5e8;\n`\n\nexport const ButtonSaveContact = styled(Button)`\n  /* margin-top: 48px; */\n  width: 68px;\n  color: white;\n  background-color: #1976d2;\n`\n\nexport const ButtonsBox = styled.div`\n  margin-top: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n`","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\n\nconst colorsValid = { \n  error: 'red', \n  success: 'green', \n  valid: 'green', \n  invalid: 'red', \n}\n\nexport const FieldBox = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n\n  color: ${(props) =>\n    colorsValid[props.valid] ?? 'black'}; \n`\n\nexport const FieldLabel = styled.label`\n  display: block;\n  width: 100%;\n`\n\nexport const FieldInput = styled.input`\n  display: block;\n  width: calc(100% - 2*4px);\n  outline: 1px solid  ${(props) =>\n    colorsValid[props.valid] ?? 'rgba(33, 33, 33, 0.2)'}; \n  background-color: transparent;\n  border-radius: 4px;\n  border: none;\n  margin-top: 4px;\n  padding: 8px 4px;\n\n  &:hover,\n  &:focus-within {\n    outline: 1px solid blue;\n    background-color: rgb(232, 240, 254);\n    transition: outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`\n\nexport const FieldPosition = styled.span`\n  position: relative;\n  margin-top: 4px;\n`\nexport const FieldFeedback = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  font-size: 0.875rem;\n`\nexport const FieldHelpText = styled.div`\n  /* position: absolute;\n  bottom: -14px;\n  left: 4px; */\n  padding-left: 4px;\n  padding-right: 4px;\n  font-size: 0.75rem;\n`\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n\n  padding: 0;\n  text-decoration: none;\n  \n  font-weight: 500;\n  border-radius: 4px;\n  border: none;\n  /* background-color: #1976d2; */\n  color:  #1976d2;;\n\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n  &:active {\n    color: red;\n  }\n`;","import React, { useState } from 'react';\nimport {useField } from 'formik';\n\n// style\nimport { \n  FieldBox, \n  FieldLabel, \n  FieldPosition, \n  FieldInput, \n  FieldHelpText, \n  FieldFeedback} from \"../Forms.styled\"\n\n\nexport const TextInputLiveFeedback = ({ label, helpText, ...props }) => {\n  const [field, meta] = useField(props);\n\n  // Show inline feedback if EITHER\n  // - the input is focused AND value is longer than 2 characters\n  // - or, the has been visited (touched === true)\n  const [didFocus, setDidFocus] = useState(false);\n  const handleFocus = () => setDidFocus(true);\n  const showFeedback =\n    (!!didFocus && field.value.trim().length > 2) || meta.touched;\n\n  return (\n      <FieldBox\n        valid = {showFeedback ? (meta.error ? 'error' : 'success') : 'default'}\n      >\n        \n        <FieldLabel htmlFor={props.id}>\n          { label } \n          \n          <FieldPosition >\n            \n            <FieldInput\n              valid = {showFeedback ? (meta.error ? 'invalid' : 'valid') : 'default'}\n              type=\"text\"\n              name=\"name\"\n              // pattern=\"^[a-zA-Zа-яА-ЯіІїЇєЄ]+(([' \\-][a-zA-Zа-яА-ЯіІїЇєЄ])?[a-zA-Zа-яА-ЯіІїЇєЄ]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              {...props}\n              {...field}\n              aria-describedby={`${props.id}-feedback ${props.id}-help`}\n              onFocus={handleFocus}\n            />\n\n          </FieldPosition>\n\n        </FieldLabel>\n        \n        { showFeedback && (\n          <FieldFeedback \n            id={`${props.id}-feedback`}\n            aria-live=\"polite\"\n          >\n            {meta.error ?? '✓'}\n          </FieldFeedback>\n        )}\n\n        <FieldHelpText\n          id={`${props.id}-help`}\n          tabIndex=\"-1\"\n        >\n          {helpText}\n        </FieldHelpText>\n\n      </FieldBox>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  min-width: 270px;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 16px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 0.05rem;\n  text-align: center;\n`\n\nexport const SectionApp = styled.section`\n  margin-bottom: 16px;\n`","import PropTypes from 'prop-types'; // ES6'\nimport { Title, SectionApp } from './Section.styled';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionApp>\n      { title && <Title>{ title }</Title> }\n      { children }\n    </SectionApp>\n  );\n}\n\nSection.propTypes = {\n  title : PropTypes.string,\n}","import { useDispatch } from 'react-redux';\nimport { useFormik, FormikProvider, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { loginUserThunk } from '../../../redux/operations'\n\n//style\nimport { TextInputLiveFeedback } from 'components/Forms/TextInputLiveFeedback/TextInputLiveFeedback';\nimport { ButtonSaveContact as ButtonSignIn, ButtonsBox } from '../Buttons.styles';\nimport { Link } from '../Forms.styled';\nexport const FormLogin = () => {\n  const dispatch = useDispatch()\n\n\n  const handleSubmit = async (values) => {\n    const { userEmail:email, userPassword:password } = values;\n   \n    dispatch(\n      loginUserThunk({\n        email,\n        password,\n    }));\n  }\n\n  // ==== configForm\n  const configFormik = useFormik({\n    initialValues: { \n      userEmail: \"\", \n      userPassword: \"\", \n    },\n    onSubmit: async (values) => handleSubmit(values),\n    validationSchema: Yup.object({\n\n      userEmail: Yup.string()\n        .matches(\n          /^[\\w._%+-]+@[\\w.-]+\\.[A-Za-z]{2,}$/i,\n          'Invalid email address'\n        )\n        .required('Email is required'),\n\n      userPassword: Yup.string()\n        .min(7, 'Must be at least 7 characters')\n        .required('Password is required'),\n    }),\n  });\n\n  return (\n    <FormikProvider value={configFormik}>\n      <Form>\n        <TextInputLiveFeedback\n          label=\"Email\"\n          id=\"userEmail\"\n          name=\"userEmail\"\n          placeholder=\"user@mail.com\" \n          helpText=\"\"\n          type=\"email\"\n        />\n        <TextInputLiveFeedback\n          label=\"Password\"\n          id=\"userPassword\"\n          name=\"userPassword\"\n          placeholder=\"Enter password\" \n          helpText=\"Must be more 7 characters\"\n          type=\"password\"\n        />\n        \n        <ButtonsBox>\n          <ButtonSignIn type=\"submit\">Sing In</ButtonSignIn>\n          <Link to={'/register'} >Go Sing Up</Link>\n        </ButtonsBox>\n      </Form>\n    </FormikProvider>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { FormLogin } from \"components/Forms/FormLogin/FormLogin\"\nimport {selectAuthetification} from 'redux/selectors';\nimport { Section } from \"components/Section/Section\"\n\nexport const LoginPage = () => { \n  \n  const authetificated = useSelector(selectAuthetification);\n  if(authetificated) return <Navigate to='/contacts' />\n\n\n  return(\n    <Section title={'Login Into Your Account'}>\n      <FormLogin />\n    </Section>\n  )\n}\n\nexport default LoginPage"],"names":["Button","styled","ButtonDelete","ButtonEdit","ButtonAddContact","ButtonSaveContact","ButtonsBox","colorsValid","error","success","valid","invalid","FieldBox","props","FieldLabel","FieldInput","FieldPosition","FieldFeedback","FieldHelpText","Link","NavLink","TextInputLiveFeedback","label","helpText","useField","field","meta","useState","didFocus","setDidFocus","showFeedback","value","trim","length","touched","htmlFor","id","type","name","required","onFocus","tabIndex","Title","SectionApp","Section","title","children","FormLogin","dispatch","useDispatch","handleSubmit","values","email","userEmail","password","userPassword","loginUserThunk","configFormik","useFormik","initialValues","onSubmit","validationSchema","Yup","matches","min","placeholder","to","LoginPage","useSelector","selectAuthetification"],"sourceRoot":""}