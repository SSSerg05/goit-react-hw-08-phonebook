{"version":3,"file":"static/js/980.2b962ba8.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Forms/FormContact/FormContact.styled.jsx","components/Forms/Buttons.styles.jsx","components/Forms/FormContact/FormContact.jsx","components/Phonebook/Search/Search.jsx","components/Phonebook/Filter/Filter.styled.jsx","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Contact/Contact.styled.jsx","components/Phonebook/Contact/Contact.jsx","components/Phonebook/ContactsList/ContactsList.styled.jsx","components/Phonebook/ContactsList/ContactsList.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/Phonebook.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  min-width: 270px;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 16px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 0.05rem;\n  text-align: center;\n`\n\nexport const SectionApp = styled.section`\n  margin-bottom: 16px;\n`","import PropTypes from 'prop-types'; // ES6'\nimport { Title, SectionApp } from './Section.styled';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionApp>\n      { title && <Title>{ title }</Title> }\n      { children }\n    </SectionApp>\n  );\n}\n\nSection.propTypes = {\n  title : PropTypes.string,\n}","import styled from \"@emotion/styled\";\n\nexport const FieldBox = styled.div`\n  position: relative;\n  margin-bottom: 8px;\n`\n\nexport const FieldLabel = styled.label`\n  display: block;\n  padding: 0 4px;\n`\n\nexport const FieldInput = styled.input`\n    display: block;\n\n    width: 100%;\n    /* min-width: 210px; // 270-30-30 */\n    outline: 1px solid rgba(33, 33, 33, 0.2);\n    background-color: transparent;\n    border-radius: 4px;\n    border: none;\n\n    padding: 8px;\n\n    &:hover,\n    &:focus-within {\n      outline: 1px solid blue;\n      background-color: rgb(232, 240, 254);\n      transition: outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n`\n\nexport const FieldPosition = styled.span`\n  position: relative;\n  margin-top: 4px;\n`\n\n// export const Button = styled.button`\n//   display: inline-block;\n//   width: 100px;\n//   padding: 20px;\n//   margin: 10px;\n//   border: none;\n//   outline: 1px solid black;\n//   border-radius: 10px;\n//   transition: background-color 150ms ease-in, \n//               color 150ms ease-in,\n//               font-weight 150ms ease-in;\n\n//   &:hover, &:active {\n//     cursor: pointer;\n//     font-weight: 700;\n//     letter-spacing: 0.03rem;  \n//     background-color: #1976d2;\n//     color: #fff;\n//     border: 1px solit black;\n//   }\n\n//   &:active {\n//     background-color: tomato;\n//     transition: background-color 150ms ease-in,\n//                 color 150ms ease-in;\n//   }\n// `","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  margin-right: 12px;\n  border: none;\n  border-radius: 4px;\n  background-color: transparent;\n  cursor: pointer;\n  color: #fff;\n \n  &:hover {\n    color: white;\n    background-color: #f44336;\n  }\n\n  &:active {\n    color: white;\n    background-color: red;\n  }\n`\nexport const ButtonDelete = styled(Button)`\n  color: #f44336;\n`\n\nexport const ButtonEdit = styled(Button)`\n  color: #1976d2;\n`\n\nexport const ButtonAddContact = styled(Button)`\n  color: green;\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { addContactThunk } from \"redux/operations\";\nimport { selectContacts, } from \"redux/selectors\";\n\n// style\nimport { FieldBox, FieldLabel, FieldPosition, FieldInput, } from \"./FormContact.styled\"\nimport { Button, } from '../Buttons.styles';\n\nexport const FormContact = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts)\n\n  // onSubmit\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const {name, number} = form.elements;\n\n    const isFound = (name) => {\n      const findName = name.trim().toLowerCase();\n\n      return contacts.some(item => item.name.toLowerCase() === findName)\n    }\n    \n    if (isFound(name.value)) {\n      toast.error(`${name.value} - find in phonebook base`);\n      return;\n    }\n\n\n    dispatch(addContactThunk({\n      name: name.value, \n      number: number.value\n    }));\n\n    form.reset();\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FieldBox>\n        <FieldLabel>\n          Name\n          <FieldPosition>\n            <FieldInput\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-ЯіІїЇєЄ]+(([' \\-][a-zA-Zа-яА-ЯіІїЇєЄ])?[a-zA-Zа-яА-ЯіІїЇєЄ]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </FieldPosition>\n        </FieldLabel>\n      </FieldBox>\n\n      <FieldBox>\n        <FieldLabel>\n          Number\n          <FieldPosition>\n            <FieldInput\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </FieldPosition>\n        </FieldLabel>\n      </FieldBox>\n\n      <Button type=\"submit\">Save</Button>\n    </form>\n  )\n}\n\n\n","import { useDispatch } from \"react-redux\"; \n\nimport { setFindQuery } from \"redux/findQuerySlice\";\n\n// style\nimport { FieldBox, FieldLabel, FieldPosition, FieldInput } from \"../../Forms/FormContact/FormContact.styled\"\n\n\nexport const Search = ({value}) => {\n  const dispatch = useDispatch();\n\n  const handleSearchChange = (e) => {\n    const query = e.currentTarget.value.trim().toLowerCase();\n    return dispatch(setFindQuery(query))\n  }\n\n  return (\n    <FieldBox>\n      <FieldLabel>Find contacts by name\n        <FieldPosition>\n          <FieldInput\n            type=\"text\"\n            value={value}\n            onChange={handleSearchChange}\n          />\n        </FieldPosition>\n      </FieldLabel>\n    </FieldBox>\n  )\n}","import styled from \"@emotion/styled\";\n\n\nexport const Btn = styled.button`\n  display: inline-flex;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  \n  font: inherit;\n  text-transform: capitalize;\n\n  cursor: pointer;\n  background-color: #e2e5e8;\n  color: black;\n\n  &:hover, &:active {\n    cursor: pointer;\n    background-color: #1976d2;\n    color: #fff;\n  }\n\n  &:active {\n    background-color: tomato;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);;\n  }\n`\nexport const FilterBox = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-top: 12px;\n`","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { useSelector, useDispatch } from \"react-redux\"; \n\n\nimport { statusFilters } from \"redux/constants\"; \nimport { selectStatusFilter } from \"redux/selectors\";\nimport { setStatusFilter } from \"redux/filtersSlice\";\n\nimport { Btn, FilterBox } from \"./Filter.styled\";\n\n\nexport const Filter = () => { \n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n  // const handleSearchChange = query => dispatch(searchContact(query))\n\n\n  const isSelectedStyle = css({\n    backgroundColor: '#1976d2',\n    color: '#fff',\n  });\n\n  const btn = Object.keys(statusFilters)\n  return (\n    <FilterBox>\n      {\n        btn.map((item, index) => {\n          const isSelected = (filter === statusFilters[item]);\n          \n          return (<Btn \n              css={ isSelected && isSelectedStyle }\n              key={`${index}-${item}`}\n              selected={isSelected}\n              onClick={() => handleFilterChange(statusFilters[item])}\n            >\n              {item}\n            </Btn>\n          )}\n        )\n      }\n    </FilterBox>\n  );\n  \n}\n\n","import styled from \"@emotion/styled\";\n\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n`\n\nexport const Name = styled.p`\n  width: 100%;\n  /* min-width: 200px; */\n  margin: 0;\n  padding: 4px;\n  flex-grow: 1;\n`\n// export const Button = styled.button`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 32px;\n//   height: 32px;\n//   padding: 0;\n//   margin: 0;\n//   margin-right: 12px;\n//   border: none;\n//   border-radius: 4px;\n//   background-color: transparent;\n//   cursor: pointer;\n \n//   &:hover {\n//     color: white;\n//     background-color: #f44336;\n//   }\n\n//   &:active {\n//     color: white;\n//     background-color: red;\n//   }\n// `\n// export const ButtonDelete = styled(Button)`\n//   color: #f44336;\n// `\n\n// export const ButtonEdit = styled(Button)`\n//   color: darkgray;\n// `\n\nexport const Checkbox = styled.input`\n  width: 24px;\n  height: 24px;\n  margin-left: 12px;\n  cursor: pointer;\n`\n","import { useDispatch } from 'react-redux';\nimport { MdClose, MdEdit } from 'react-icons/md';\nimport PropTypes from 'prop-types'; // ES6'\n\nimport { deleteContactThunk, toggleCompletedThunk, editContactThunk, } from \"redux/operations\";\n\nimport { Card, Name, Checkbox } from './Contact.styled';\nimport { ButtonDelete, ButtonEdit } from '../../Forms/Buttons.styles';\n\nexport const Contact = ({contact}) => {\n  const dispatch = useDispatch();\n  const {id, name, number, selected=false} = contact;\n\n  const handleEdit = () => dispatch(editContactThunk(id));\n  const handleDelete = () => dispatch(deleteContactThunk(id));\n  const handleToggle = () => dispatch(toggleCompletedThunk(contact));\n\n  return (\n    <Card>\n\n      <label>\n        <Checkbox \n          type=\"checkbox\"\n          checked={ selected }\n          onChange={ handleToggle } \n        />\n      </label>\n\n      <Name>{ name + ': ' + number }</Name>\n\n      <ButtonEdit type=\"button\" onClick={ handleEdit}>\n        <MdEdit size={24} /> \n      </ButtonEdit>\n\n      <ButtonDelete type=\"button\" onClick={ handleDelete }>\n        <MdClose size={24} />\n      </ButtonDelete>\n     \n    </Card>\n  )\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  text-decoration: none;\n  margin: 0;\n  padding-left: 0;\n  list-style: none;\n`\nexport const ListItem = styled.li`\n  background-color: lightsteelblue;\n\n  &:nth-of-type(odd) {\n    background-color: lightcyan;\n  }\n`\n\nexport const ItemButton = styled.button`\n  display: inline-block;\n  outline: 1px solid black;\n  border: none;\n  min-width: 75px;\n  height: 24px;\n  margin: 0;\n  padding: 0;\n  margin-right: 10px;\n  border-radius: 5px;\n\n  &:hover, &:active {\n    cursor: pointer;\n    background-color: cyan;\n    border: 1px solit black;\n  }\n\n  &:active {\n    background-color: tomato;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);;\n  }\n`\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { Contact } from '../Contact/Contact';\nimport { List, ListItem, } from './ContactsList.styled';\n\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const showContacts = Array.isArray(visibleContacts) && visibleContacts.length > 0;\n  \n  if (!showContacts) {\n    return (\n      <p>Sorry, you don't have more contacts</p>\n    )\n  }\n\n  return (\n    <List>\n      {\n        visibleContacts.map((item) =>\n          <ListItem key={ item.id }>\n            <Contact contact={ item } />\n          </ListItem>)\n      }\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\n/*\n * Стили компонента Modal\n */\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(100, 0, 0, 0.8);\n  z-index: 100;\n`\n\nexport const BoxModal = styled.div`\n  position: relative;\n  max-width: calc(100vw - 10px);\n  max-height: calc(100vh - 10px);\n  background-color: white;\n  z-index: 101;\n`\n\nexport const ModalButtonClose = styled.button`\n     position: absolute;\n     top: 10px;\n     right: 12px;\n     border-radius: 4px;\n`\n\nexport const ModalTitle = styled.div`\n  position: absolute;\n  bottom: 4px;\n  left: 12px;\n  width: calc(100% - 24px);\n  padding-left: 12px;\n  color: grey;\n  background-color: rgba(0, 0, 0, 0.6);\n`\n\nexport const ModalImage = styled.img`\n  width: 100%;\n  height: calc(100vh - 48px);\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`\n","import React, { useCallback, useEffect, useState, } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { MdClose } from 'react-icons/md';\n\n// import PropTypes from 'prop-types';\n// import { Loader } from \"components/Loader/Loader\";\n\n// style\nimport { Overlay, BoxModal, ModalButtonClose, ModalImage, ModalTitle, } from \"./Modal.styled\";\n\nconst MODAL_CONTAINER_ID = document.querySelector('#modal-root');\n\n\nexport const Modal = ({children, src=\"\", title=\"\", onClose }) => {\n\n  const [loaded, setLoaded ] = useState(false);\n\n  // https://habr.com/ru/articles/736284/\n  const handleClose = useCallback((e) => {\n\n      onClose?.();\n  }, [onClose]);\n\n  useEffect(() => {\n    setLoaded(true);\n  }, [loaded])\n\n\n  useEffect(() => {\n\n    const handleKeyDown = e => {\n      console.log('handleKeyDown', e.code);\n      if (e.code === 'Escape') {\n        onClose?.();\n      }\n    }\n\n    const handleBackdropClick = e => { \n      console.log('handleBackdropClick', e);\n      console.log(e.currentTarget === e.target);\n\n      if (e.currentTarget === e.target) { \n         onClose?.();\n      }\n    }\n\n    window.addEventListener('click', handleBackdropClick);\n    window.addEventListener('keydown', handleKeyDown);\n\n\n    return () => {\n      window.removeEventListener('click', handleBackdropClick);\n      window.removeEventListener('keydown', handleKeyDown)\n    }\n\n }, [onClose])\n\n\n  const onLoadedLargeImage = () => {\n    setLoaded(false);\n  }\n\n\n  return createPortal(\n    <Overlay onClick={ handleClose }>\n       \n        <BoxModal>\n\n          {/* {loaded && <Loader /> } */}\n          \n          { children }\n          { src && (<ModalImage onLoad={ onLoadedLargeImage } src={ src } alt={ title } /> )}\n          \n            <ModalButtonClose type=\"button\" onClick={ handleClose }>\n              <MdClose size={12}/>\n            </ModalButtonClose>\n          \n          { !loaded && \n            <ModalTitle>\n              { title }\n            </ModalTitle>\n          }\n        </BoxModal>\n        \n    </Overlay>\n  , MODAL_CONTAINER_ID)\n}\n\n// Modal.propTypes = {\n//   src : PropTypes.string.isRequired,\n//   tags: PropTypes.string.isRequired,\n//   onClose : PropTypes.func.isRequired,\n// };","import styled from \"@emotion/styled\";\n\n\nexport const DeskPhonebook = styled.div`\n  /* min-width: 270px; */\n  margin-top: 50px;\n  padding: 30px;\n  border: 1px solid black;\n`\n\n// export const Button = styled.button`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 32px;\n//   height: 32px;\n//   padding: 0;\n//   margin: 0;\n//   margin-right: 12px;\n//   border: none;\n//   border-radius: 4px;\n//   background-color: transparent;\n//   cursor: pointer;\n \n//   &:hover {\n//     color: white;\n//     background-color: #f44336;\n//   }\n\n//   &:active {\n//     color: white;\n//     background-color: red;\n//   }\n// `\n// export const ButtonDelete = styled(Button)`\n//   color: #f44336;\n// `","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { MdAddIcCall } from 'react-icons/md';\n\n\n// redux\nimport { requestContactsThunk } from \"redux/operations\";\nimport { selectError, selectLoading, selectAuthetification } from \"redux/selectors\";\n\n// components\nimport { Loader } from \"components/Loader/Loader\";\nimport { Section } from \"../Section/Section\";\nimport { FormContact } from \"../Forms/FormContact/FormContact\";\nimport { Search } from \"./Search/Search\";\nimport { Filter } from \"./Filter/Filter\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\nimport { Modal } from 'components/Modal/Modal';\n\n// style\nimport { DeskPhonebook } from \"./Phonebook.styled\";\nimport { ButtonAddContact } from \"components/Forms/Buttons.styles\";\n\n\nexport const Phonebook = () => {\n  \n  const dispatch = useDispatch();\n\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const authetification = useSelector(selectAuthetification);\n\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() =>  {\n    dispatch(requestContactsThunk());\n  }, [dispatch]);\n\n  if (!authetification) return;\n\n  const handleAddContact = () => {toggleModal()}\n  \n  // відкриття / закриття модалки\n  const toggleModal = () => {\n    setShowModal( !showModal );\n  }\n\n\n  return (\n    <DeskPhonebook>\n\n      <Section>\n        {/* <Form /> */}\n        <ButtonAddContact onClick={handleAddContact}>\n          <MdAddIcCall size={24} />\n        </ButtonAddContact>\n      </Section>\n\n      <Section>\n        <Search />\n        <Filter />\n      </Section>\n      \n      <Section title={\"Contacts\"}>\n\n        { loading && <Loader />}\n        { error && <p>Error... { error }</p>}\n        { loading && !error && <b>Request in progress...</b> }\n        \n        <ContactsList />\n      </Section>\n      \n      { showModal && (\n          <Modal\n            // src={ selectedImage }\n            // tags={ tagsSelectedImage }\n            onClose={ setShowModal }\n          >\n            <FormContact />\n          </Modal> \n        )}\n    </DeskPhonebook>\n  )\n}\n","import { useSelector } from 'react-redux';\n// import { Navigate } from 'react-router-dom';\n\nimport {selectAuthetification, } from 'redux/selectors';\n// import { Container } from \"components/App/App.styled\";\nimport { Phonebook } from 'components/Phonebook/Phonebook';\n\nexport const ContactsPage = () => { \n\n  const authetificated = useSelector(selectAuthetification);\n  if (!authetificated) return;\n\n  return(\n    // <Container>\n      <Phonebook />\n    // </Container>\n  )\n}\n\nexport default ContactsPage"],"names":["Title","styled","SectionApp","Section","title","children","FieldBox","FieldLabel","FieldInput","FieldPosition","Button","ButtonDelete","ButtonEdit","ButtonAddContact","FormContact","dispatch","useDispatch","contacts","useSelector","selectContacts","onSubmit","e","preventDefault","form","target","elements","name","number","findName","trim","toLowerCase","some","item","isFound","value","addContactThunk","reset","toast","type","pattern","required","Search","onChange","query","currentTarget","setFindQuery","Btn","FilterBox","Filter","filter","selectStatusFilter","isSelectedStyle","css","backgroundColor","color","btn","Object","keys","statusFilters","map","index","isSelected","selected","onClick","setStatusFilter","handleFilterChange","Card","Name","Checkbox","Contact","contact","id","checked","toggleCompletedThunk","editContactThunk","size","deleteContactThunk","List","ListItem","ContactsList","visibleContacts","selectVisibleContacts","Array","isArray","length","Overlay","BoxModal","ModalButtonClose","ModalTitle","ModalImage","MODAL_CONTAINER_ID","document","querySelector","Modal","src","onClose","useState","loaded","setLoaded","handleClose","useCallback","useEffect","handleKeyDown","console","log","code","handleBackdropClick","window","addEventListener","removeEventListener","createPortal","onLoad","alt","DeskPhonebook","Phonebook","loading","selectLoading","error","selectError","authetification","selectAuthetification","showModal","setShowModal","requestContactsThunk","toggleModal","Loader","ContactsPage"],"sourceRoot":""}