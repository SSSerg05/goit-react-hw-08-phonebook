{"version":3,"file":"static/js/698.9eb275e9.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.jsx","components/Forms/TextInputLiveFeedback/TextInputLiveFeedback.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Forms/FormRegister/FormRegister.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nconst colorsValid = { \n  error: 'red', \n  success: 'green', \n  valid: 'green', \n  invalid: 'red', \n}\n\nexport const FieldBox = styled.div`\n  width: 100%;\n  display: flex;\n  position: relative;\n\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n\n  color: ${(props) =>\n    colorsValid[props.valid] ?? 'black'}; \n`\n\nexport const FieldLabel = styled.label`\n  display: block;\n  width: 100%;\n`\n\nexport const FieldInput = styled.input`\n  display: block;\n  width: calc(100% - 2*4px);\n  outline: 1px solid  ${(props) =>\n    colorsValid[props.valid] ?? 'rgba(33, 33, 33, 0.2)'}; \n  background-color: transparent;\n  border-radius: 4px;\n  border: none;\n  margin-top: 4px;\n  padding: 8px 4px;\n\n  &:hover,\n  &:focus-within {\n    outline: 1px solid blue;\n    background-color: rgb(232, 240, 254);\n    transition: outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`\n\nexport const FieldPosition = styled.span`\n  position: relative;\n  margin-top: 4px;\n`\nexport const FieldFeedback = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  font-size: 0.875rem;\n`\nexport const FieldHelpText = styled.div`\n  position: absolute;\n  bottom: -14px;\n  left: 4px;\n  font-size: 0.75rem;\n`","import React, { useState } from 'react';\nimport {useField } from 'formik';\n\n// style\nimport { \n  FieldBox, \n  FieldLabel, \n  FieldPosition, \n  FieldInput, \n  FieldHelpText, \n  FieldFeedback} from \"../Forms.styled\"\n\n\nexport const TextInputLiveFeedback = ({ label, helpText, ...props }) => {\n  const [field, meta] = useField(props);\n\n  // Show inline feedback if EITHER\n  // - the input is focused AND value is longer than 2 characters\n  // - or, the has been visited (touched === true)\n  const [didFocus, setDidFocus] = useState(false);\n  const handleFocus = () => setDidFocus(true);\n  const showFeedback =\n    (!!didFocus && field.value.trim().length > 2) || meta.touched;\n\n  return (\n      <FieldBox\n        valid = {showFeedback ? (meta.error ? 'error' : 'success') : 'default'}\n      >\n        \n        <FieldLabel htmlFor={props.id}>\n          { label } \n          \n          <FieldPosition >\n            \n            <FieldInput\n              valid = {showFeedback ? (meta.error ? 'invalid' : 'valid') : 'default'}\n              type=\"text\"\n              name=\"name\"\n              // pattern=\"^[a-zA-Zа-яА-ЯіІїЇєЄ]+(([' \\-][a-zA-Zа-яА-ЯіІїЇєЄ])?[a-zA-Zа-яА-ЯіІїЇєЄ]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              {...props}\n              {...field}\n              aria-describedby={`${props.id}-feedback ${props.id}-help`}\n              onFocus={handleFocus}\n            />\n\n          </FieldPosition>\n\n        </FieldLabel>\n        \n        { showFeedback && (\n          <FieldFeedback \n            id={`${props.id}-feedback`}\n            aria-live=\"polite\"\n          >\n            {meta.error ?? '✓'}\n          </FieldFeedback>\n        )}\n\n        <FieldHelpText\n          id={`${props.id}-help`}\n          tabIndex=\"-1\"\n        >\n          {helpText}\n        </FieldHelpText>\n\n      </FieldBox>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  min-width: 270px;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 16px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 0.05rem;\n  text-align: center;\n`\n\nexport const SectionApp = styled.section`\n  margin-bottom: 16px;\n`","import PropTypes from 'prop-types'; // ES6'\nimport { Title, SectionApp } from './Section.styled';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionApp>\n      { title && <Title>{ title }</Title> }\n      { children }\n    </SectionApp>\n  );\n}\n\nSection.propTypes = {\n  title : PropTypes.string,\n}","import { useDispatch } from 'react-redux';\nimport { useFormik, FormikProvider, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { TextInputLiveFeedback } from 'components/Forms/TextInputLiveFeedback/TextInputLiveFeedback';\nimport { registerUserThunk } from '../../../redux/operations'\n\nexport const FormRegister = () => {\n  const dispatch = useDispatch()\n\n\n  const handleSubmit = async (values) => {\n    const {userName:name, userEmail:email, userPassword:password} = values;\n    \n    dispatch(\n      registerUserThunk({\n        name,\n        email,\n        password,\n    }))\n    \n  }\n\n  // ==== configForm\n  const configFormik = useFormik({\n    initialValues: { \n      userName: \"\", \n      userEmail: \"\", \n      userPassword: \"\", \n    },\n    onSubmit: async (values) => handleSubmit(values),\n    validationSchema: Yup.object({\n\n      userName: Yup.string()\n        .min(3, 'Must be at least 3 characters')\n        .max(40, 'Must be less than 40 characters')\n        .matches(\n          /^[\\w-/']+$/,\n          'Cannot contain special characters or spaces'\n        )\n        .required('Username is required'),\n\n      userEmail: Yup.string()\n        .matches(\n          /^[\\w._%+-]+@[\\w.-]+\\.[A-Za-z]{2,}$/i,\n          'Invalid email address'\n        )\n        .required('Email is required'),\n\n      userPassword: Yup.string()\n        .min(7, 'Must be at least 7 characters')\n        .required('Password is required'),\n    }),\n  });\n \n  return (\n    <FormikProvider value={configFormik}>\n      <Form>\n      <TextInputLiveFeedback\n          label=\"Username\"\n          id=\"userName\"\n          name=\"userName\"\n          placeholder=\"Enter your name\" \n          helpText=\"Must be 3-40 characters and cannot contain special characters.\"\n          type=\"text\"\n        />\n        <TextInputLiveFeedback\n          label=\"Email\"\n          id=\"userEmail\"\n          name=\"userEmail\"\n          placeholder=\"mister@gmail.com\" \n          helpText=\"\"\n          type=\"email\"\n        />\n        <TextInputLiveFeedback\n          label=\"Password\"\n          id=\"userPassword\"\n          name=\"userPassword\"\n          placeholder=\"Enter password\" \n          helpText=\"Must be more 7 characters\"\n          type=\"password\"\n        />\n\n        <div>\n          <button type=\"submit\">Sing Up</button>\n          <button type=\"reset\">Reset</button>\n        </div>\n      </Form>\n    </FormikProvider>\n  );\n\n}","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport {selectAuthetification} from 'redux/selectors';\nimport { Section } from \"components/Section/Section\"\n// import { Formik, Field, Form } from \"formik\"\n\nimport { FormRegister } from \"components/Forms/FormRegister/FormRegister\"\n\n\nexport const RegisterPage = () => { \n  \n  const authetificated = useSelector(selectAuthetification);\n  if(authetificated) return <Navigate to='/contacts' />\n\n  return(\n    <Section title='Register Your Account'>\n      \n      <FormRegister />\n      \n      {/* <Formik \n        initialValues={{ userName: \"\", userEmail: \"\", userPassword: \"\", }}\n        onSubmit={ async (values) => handleSubmit(values) }\n      >\n        <Form>\n          <Field name=\"userName\" type=\"text\" required minlenght={2} />\n          <Field \n            name=\"userEmail\" \n            type=\"email\" \n            // pattern = \"/^[a-zA-Z0-9]+@([a-zA-Z0-9]+\\.)+[a-zA-Z0-9]{2,4}$/\" \n            required \n          />\n          <Field \n            name=\"userPassword\" \n            type=\"password\" \n            minlenght={7}\n            required \n          />\n          <button type=\"submit\">Submit</button>\n        </Form>\n\n      </Formik> */}\n    </Section>\n  )\n}\n\nexport default RegisterPage"],"names":["colorsValid","error","success","valid","invalid","FieldBox","styled","props","FieldLabel","FieldInput","FieldPosition","FieldFeedback","FieldHelpText","TextInputLiveFeedback","label","helpText","useField","field","meta","useState","didFocus","setDidFocus","showFeedback","value","trim","length","touched","htmlFor","id","type","name","required","onFocus","tabIndex","Title","SectionApp","Section","title","children","FormRegister","dispatch","useDispatch","handleSubmit","values","userName","email","userEmail","password","userPassword","registerUserThunk","configFormik","useFormik","initialValues","onSubmit","validationSchema","Yup","min","max","matches","placeholder","RegisterPage","useSelector","selectAuthetification","to"],"sourceRoot":""}