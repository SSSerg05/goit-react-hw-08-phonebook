{"version":3,"file":"static/js/149.bf4c14a9.chunk.js","mappings":"yUAUaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAY,mCAAG,WAAOC,GAAP,yEACDC,EAAiCD,EAA3CE,UAA8BC,EAAaH,EAA1BI,aAEzBP,GACEQ,EAAAA,EAAAA,IAAe,CACbJ,MAAAA,EACAE,SAAAA,KANe,2CAAH,sDAWZG,GAAeC,EAAAA,EAAAA,IAAU,CAC7BC,cAAe,CACbN,UAAW,GACXE,aAAc,IAEhBK,SAAS,WAAD,wBAAE,WAAOT,GAAP,0FAAkBD,EAAaC,IAA/B,2CAAF,mDAAC,GACTU,iBAAkBC,EAAAA,GAAW,CAE3BT,UAAWS,EAAAA,KACRC,QACC,sCACA,yBAEDC,SAAS,qBAEZT,aAAcO,EAAAA,KACXG,IAAI,EAAG,iCACPD,SAAS,4BAIhB,OACE,SAAC,KAAD,CAAgBE,MAAOT,EAAvB,UACE,UAAC,KAAD,YACE,SAACU,EAAA,EAAD,CACEC,MAAM,QACNC,GAAG,YACHC,KAAK,YACLC,YAAY,gBACZC,SAAS,GACTC,KAAK,WAEP,SAACN,EAAA,EAAD,CACEC,MAAM,WACNC,GAAG,eACHC,KAAK,eACLC,YAAY,iBACZC,SAAS,4BACTC,KAAK,cAGP,UAAC,KAAD,YACE,SAAC,KAAD,CAAcA,KAAK,SAAnB,SAA4B,aAC5B,SAAC,KAAD,CAAMC,GAAI,YAAV,SAAwB,sBAKjC,E,UClEYC,EAAY,WAMvB,OACE,SAACC,EAAA,EAAD,CAASC,MAAO,0BAAhB,UACE,SAAC9B,EAAD,KAGL,EAED,G","sources":["components/Forms/FormLogin/FormLogin.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport { useFormik, FormikProvider, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { loginUserThunk } from '../../../redux/authOperations'\r\n\r\n//style\r\nimport { TextInputLiveFeedback } from 'components/Forms/TextInputLiveFeedback/TextInputLiveFeedback';\r\nimport { ButtonSaveContact as ButtonSignIn, ButtonsBox } from '../Buttons.styles';\r\nimport { Link } from '../Forms.styled';\r\nexport const FormLogin = () => {\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const handleSubmit = async (values) => {\r\n    const { userEmail:email, userPassword:password } = values;\r\n   \r\n    dispatch(\r\n      loginUserThunk({\r\n        email,\r\n        password,\r\n    }));\r\n  }\r\n\r\n  // ==== configForm\r\n  const configFormik = useFormik({\r\n    initialValues: { \r\n      userEmail: \"\", \r\n      userPassword: \"\", \r\n    },\r\n    onSubmit: async (values) => handleSubmit(values),\r\n    validationSchema: Yup.object({\r\n\r\n      userEmail: Yup.string()\r\n        .matches(\r\n          /^[\\w._%+-]+@[\\w.-]+\\.[A-Za-z]{2,}$/i,\r\n          'Invalid email address'\r\n        )\r\n        .required('Email is required'),\r\n\r\n      userPassword: Yup.string()\r\n        .min(7, 'Must be at least 7 characters')\r\n        .required('Password is required'),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={configFormik}>\r\n      <Form>\r\n        <TextInputLiveFeedback\r\n          label=\"Email\"\r\n          id=\"userEmail\"\r\n          name=\"userEmail\"\r\n          placeholder=\"user@mail.com\" \r\n          helpText=\"\"\r\n          type=\"email\"\r\n        />\r\n        <TextInputLiveFeedback\r\n          label=\"Password\"\r\n          id=\"userPassword\"\r\n          name=\"userPassword\"\r\n          placeholder=\"Enter password\" \r\n          helpText=\"Must be more 7 characters\"\r\n          type=\"password\"\r\n        />\r\n        \r\n        <ButtonsBox>\r\n          <ButtonSignIn type=\"submit\">Sing In</ButtonSignIn>\r\n          <Link to={'/register'} >Go Sing Up</Link>\r\n        </ButtonsBox>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}","// import { useSelector } from 'react-redux';\r\n// import { Navigate } from 'react-router-dom';\r\n\r\nimport { FormLogin } from \"components/Forms/FormLogin/FormLogin\"\r\n// import {selectAuthetification} from 'redux/selectors';\r\nimport { Section } from \"components/Section/Section\"\r\n\r\nexport const LoginPage = () => { \r\n  \r\n  // const authetificated = useSelector(selectAuthetification);\r\n  // if(authetificated) return <Navigate to='/contacts' />\r\n\r\n\r\n  return(\r\n    <Section title={'Login Into Your Account'}>\r\n      <FormLogin />\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default LoginPage"],"names":["FormLogin","dispatch","useDispatch","handleSubmit","values","email","userEmail","password","userPassword","loginUserThunk","configFormik","useFormik","initialValues","onSubmit","validationSchema","Yup","matches","required","min","value","TextInputLiveFeedback","label","id","name","placeholder","helpText","type","to","LoginPage","Section","title"],"sourceRoot":""}