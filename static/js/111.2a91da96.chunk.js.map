{"version":3,"file":"static/js/111.2a91da96.chunk.js","mappings":"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","sources":["components/Forms/Buttons.styles.jsx","components/Forms/Forms.styled.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Forms/FormContact/FormContact.jsx","components/Phonebook/Search/Search.jsx","components/Phonebook/Filter/Filter.styled.jsx","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Contact/Contact.styled.jsx","components/Phonebook/Contact/Contact.jsx","components/Phonebook/ContactsList/ContactsList.styled.jsx","components/Phonebook/ContactsList/ContactsList.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/Phonebook.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  margin-right: 12px;\n  border: none;\n  border-radius: 4px;\n  background-color: transparent;\n  cursor: pointer;\n \n  &:hover {\n    color: white;\n    background-color: #f44336;\n  }\n\n  &:active {\n    color: white;\n    background-color: red;\n  }\n`\nexport const ButtonDelete = styled(Button)`\n  color: #f44336;\n`\n\nexport const ButtonEdit = styled(Button)`\n  color: #1976d2;\n`\n\nexport const ButtonAddContact = styled(Button)`\n  width: 150px;\n  justify-content: space-around;\n  color: green;\n  background-color: #e2e5e8;\n`\n\nexport const ButtonSaveContact = styled(Button)`\n  margin-top: 48px;\n  width: 68px;\n  color: white;\n  background-color: #1976d2;\n`","import styled from \"@emotion/styled\";\n\nconst colorsValid = { \n  error: 'red', \n  success: 'green', \n  valid: 'green', \n  invalid: 'red', \n}\n\nexport const FieldBox = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n\n  color: ${(props) =>\n    colorsValid[props.valid] ?? 'black'}; \n`\n\nexport const FieldLabel = styled.label`\n  display: block;\n  width: 100%;\n`\n\nexport const FieldInput = styled.input`\n  display: block;\n  width: calc(100% - 2*4px);\n  outline: 1px solid  ${(props) =>\n    colorsValid[props.valid] ?? 'rgba(33, 33, 33, 0.2)'}; \n  background-color: transparent;\n  border-radius: 4px;\n  border: none;\n  margin-top: 4px;\n  padding: 8px 4px;\n\n  &:hover,\n  &:focus-within {\n    outline: 1px solid blue;\n    background-color: rgb(232, 240, 254);\n    transition: outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`\n\nexport const FieldPosition = styled.span`\n  position: relative;\n  margin-top: 4px;\n`\nexport const FieldFeedback = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  font-size: 0.875rem;\n`\nexport const FieldHelpText = styled.div`\n  /* position: absolute;\n  bottom: -14px;\n  left: 4px; */\n  padding-left: 4px;\n  padding-right: 4px;\n  font-size: 0.75rem;\n`","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  min-width: 270px;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 16px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 0.05rem;\n  text-align: center;\n`\n\nexport const SectionApp = styled.section`\n  margin-bottom: 16px;\n`","import PropTypes from 'prop-types'; // ES6'\nimport { Title, SectionApp } from './Section.styled';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionApp>\n      { title && <Title>{ title }</Title> }\n      { children }\n    </SectionApp>\n  );\n}\n\nSection.propTypes = {\n  title : PropTypes.string,\n}","import { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { addContactThunk } from \"redux/operations\";\nimport { selectContacts, } from \"redux/selectors\";\n\n// style\nimport { FieldBox, FieldLabel, FieldPosition, FieldInput, } from \"../Forms.styled\"\nimport { ButtonSaveContact, } from '../Buttons.styles';\n\nexport const FormContact = ({onClose}) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts)\n\n  // onSubmit\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const {name, number} = form.elements;\n\n    const isFound = (name) => {\n      const findName = name.trim().toLowerCase();\n\n      return contacts.some(item => item.name.toLowerCase() === findName)\n    }\n    \n    if (isFound(name.value)) {\n      toast.error(`${name.value} - find in phonebook base`);\n      return;\n    }\n\n\n    dispatch(addContactThunk({\n      name: name.value, \n      number: number.value\n    }));\n\n    toast.success(`${name.value} - Add in phonebook`);\n    form.reset();\n    onClose?.();\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FieldBox>\n        <FieldLabel>\n          Name\n          <FieldPosition>\n            <FieldInput\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-ЯіІїЇєЄ]+(([' \\-][a-zA-Zа-яА-ЯіІїЇєЄ])?[a-zA-Zа-яА-ЯіІїЇєЄ]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </FieldPosition>\n        </FieldLabel>\n      </FieldBox>\n\n      <FieldBox>\n        <FieldLabel>\n          Number\n          <FieldPosition>\n            <FieldInput\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </FieldPosition>\n        </FieldLabel>\n      </FieldBox>\n\n      <ButtonSaveContact type=\"submit\">Save</ButtonSaveContact>\n    </form>\n  )\n}\n\n\n","import { useDispatch } from \"react-redux\"; \n\nimport { setFindQuery } from \"redux/findQuerySlice\";\n\n// style\nimport { FieldBox, FieldLabel, FieldPosition, FieldInput } from \"../../Forms/Forms.styled\"\n\n\nexport const Search = ({value}) => {\n  const dispatch = useDispatch();\n\n  const handleSearchChange = (e) => {\n    const query = e.currentTarget.value.trim().toLowerCase();\n    return dispatch(setFindQuery(query))\n  }\n\n  return (\n    <FieldBox>\n      <FieldLabel>Find contacts by name\n        <FieldPosition>\n          <FieldInput\n            type=\"text\"\n            value={value}\n            onChange={handleSearchChange}\n          />\n        </FieldPosition>\n      </FieldLabel>\n    </FieldBox>\n  )\n}","import styled from \"@emotion/styled\";\n\n\nexport const Btn = styled.button`\n  display: inline-flex;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  \n  font: inherit;\n  text-transform: capitalize;\n\n  cursor: pointer;\n  background-color: #e2e5e8;\n  color: black;\n\n  &:hover, &:active {\n    cursor: pointer;\n    background-color: #1976d2;\n    color: #fff;\n  }\n\n  &:active {\n    background-color: tomato;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);;\n  }\n`\nexport const FilterBox = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-top: 12px;\n`","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { useSelector, useDispatch } from \"react-redux\"; \n\n\nimport { statusFilters } from \"redux/constants\"; \nimport { selectStatusFilter } from \"redux/selectors\";\nimport { setStatusFilter } from \"redux/filtersSlice\";\n\nimport { Btn, FilterBox } from \"./Filter.styled\";\n\n\nexport const Filter = () => { \n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n  // const handleSearchChange = query => dispatch(searchContact(query))\n\n\n  const isSelectedStyle = css({\n    backgroundColor: '#1976d2',\n    color: '#fff',\n  });\n\n  const btn = Object.keys(statusFilters)\n  return (\n    <FilterBox>\n      {\n        btn.map((item, index) => {\n          const isSelected = (filter === statusFilters[item]);\n          \n          return (<Btn \n              css={ isSelected && isSelectedStyle }\n              key={`${index}-${item}`}\n              selected={isSelected}\n              onClick={() => handleFilterChange(statusFilters[item])}\n            >\n              {item}\n            </Btn>\n          )}\n        )\n      }\n    </FilterBox>\n  );\n  \n}\n\n","import styled from \"@emotion/styled\";\n\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n`\n\nexport const Name = styled.p`\n  width: 100%;\n  /* min-width: 200px; */\n  margin: 0;\n  padding: 4px;\n  flex-grow: 1;\n`\n// export const Button = styled.button`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 32px;\n//   height: 32px;\n//   padding: 0;\n//   margin: 0;\n//   margin-right: 12px;\n//   border: none;\n//   border-radius: 4px;\n//   background-color: transparent;\n//   cursor: pointer;\n \n//   &:hover {\n//     color: white;\n//     background-color: #f44336;\n//   }\n\n//   &:active {\n//     color: white;\n//     background-color: red;\n//   }\n// `\n// export const ButtonDelete = styled(Button)`\n//   color: #f44336;\n// `\n\n// export const ButtonEdit = styled(Button)`\n//   color: darkgray;\n// `\n\nexport const Checkbox = styled.input`\n  width: 24px;\n  height: 24px;\n  margin-left: 12px;\n  cursor: pointer;\n`\n","import { useDispatch } from 'react-redux';\nimport { MdClose, MdEdit } from 'react-icons/md';\nimport PropTypes from 'prop-types'; // ES6'\n\nimport { deleteContactThunk, toggleCompletedThunk, editContactThunk, } from \"redux/operations\";\n\nimport { Card, Name, Checkbox } from './Contact.styled';\nimport { ButtonDelete, ButtonEdit } from '../../Forms/Buttons.styles';\n\nexport const Contact = ({contact}) => {\n  const dispatch = useDispatch();\n  const {id, name, number, selected=false} = contact;\n\n  const handleEdit = () => dispatch(editContactThunk(id));\n  const handleDelete = () => dispatch(deleteContactThunk(id));\n  const handleToggle = () => dispatch(toggleCompletedThunk(contact));\n\n  return (\n    <Card>\n\n      <label>\n        <Checkbox \n          type=\"checkbox\"\n          checked={ selected }\n          onChange={ handleToggle } \n        />\n      </label>\n\n      <Name>{ name + ': ' + number }</Name>\n\n      <ButtonEdit type=\"button\" onClick={ handleEdit}>\n        <MdEdit size={24} /> \n      </ButtonEdit>\n\n      <ButtonDelete type=\"button\" onClick={ handleDelete }>\n        <MdClose size={24} />\n      </ButtonDelete>\n     \n    </Card>\n  )\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  text-decoration: none;\n  margin: 0;\n  padding-left: 0;\n  list-style: none;\n`\nexport const ListItem = styled.li`\n  background-color: lightsteelblue;\n\n  &:nth-of-type(odd) {\n    background-color: lightcyan;\n  }\n`\n\nexport const ItemButton = styled.button`\n  display: inline-block;\n  outline: 1px solid black;\n  border: none;\n  min-width: 75px;\n  height: 24px;\n  margin: 0;\n  padding: 0;\n  margin-right: 10px;\n  border-radius: 5px;\n\n  &:hover, &:active {\n    cursor: pointer;\n    background-color: cyan;\n    border: 1px solit black;\n  }\n\n  &:active {\n    background-color: tomato;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);;\n  }\n`\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { Contact } from '../Contact/Contact';\nimport { List, ListItem, } from './ContactsList.styled';\n\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const showContacts = Array.isArray(visibleContacts) && visibleContacts.length > 0;\n  \n  if (!showContacts) {\n    return (\n      <p>Sorry, you don't have more contacts</p>\n    )\n  }\n\n  return (\n    <List>\n      {\n        visibleContacts.map((item) =>\n          <ListItem key={ item.id }>\n            <Contact contact={ item } />\n          </ListItem>)\n      }\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\nimport {Button} from \"../Forms/Buttons.styles\"\n/*\n * Стили компонента Modal\n */\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 100;\n`\n\nexport const BoxModal = styled.div`\n  position: relative;\n  max-width: calc(100vw - 36px);\n  width: 270px;\n  padding-top: 68px;\n  padding-bottom: 36px;\n  padding-left: 12px;\n  padding-right: 12px;\n  background-color: white;\n`\n\nexport const ModalButtonClose = styled(Button)`\n  position: absolute;\n  top: 18px;\n  right: 0;\n  border-radius: 4px;\n  color: black;\n  background-color: #e2e5e8;\n`\n\nexport const ModalTitle = styled.div`\n  position: absolute;\n  bottom: 4px;\n  left: 12px;\n  width: calc(100% - 24px);\n  padding-left: 12px;\n  color: grey;\n  background-color: rgba(0, 0, 0, 0.6);\n`\n\nexport const ModalImage = styled.img`\n  width: 100%;\n  height: calc(100vh - 48px);\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n// import PropTypes from 'prop-types';\n\n// import { Loader } from \"components/Loader/Loader\";\nimport { MdClose } from 'react-icons/md';\n\n// style\nimport { Overlay, BoxModal, ModalButtonClose, ModalImage, ModalTitle, } from \"./Modal.styled\";\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport class Modal extends Component {\n  \n  state = {\n    loaded: false,\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n\n    this.setState({ loaded: true });\n  }\n\n  onLoadedLargeImage = () => {\n    this.setState({ loaded: false });\n  }\n\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n\n  // close modal for press in ESC\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      // console.log(\"You press ESC\");\n      this.props.onClose();\n    }\n  }\n\n  \n  // close modal for click in backdrop || button\n  handleBackdropClick = e => { \n    if (e.currentTarget === e.target) { \n       this.props.onClose();\n    }\n  }\n\n  handleCloseButtonClick = e => { \n    this.props.onClose();\n  }\n\n  render() {\n    const { children, src='', title='' } = this.props;\n    const { loaded } = this.state;\n    \n    return createPortal(\n      <Overlay onClick={ this.handleBackdropClick }>\n       \n        <BoxModal>\n\n          {/* {loaded && <Loader /> } */}\n\n          { children }\n          { src && (<ModalImage onLoad={  this.onLoadedLargeImage } src={ src } alt={ title } /> )}\n\n            <ModalButtonClose type=\"button\" onClick={ this.handleCloseButtonClick }>\n              <MdClose size={12} />\n            </ModalButtonClose>\n\n          { !loaded && \n            <ModalTitle>\n              { title }\n            </ModalTitle>\n          }\n        </BoxModal>\n      \n      </Overlay>\n    , modalRoot)\n  };\n}\n\n// Modal.propTypes = {\n//   src : PropTypes.string.isRequired,\n//   title: PropTypes.string.isRequired,\n//   onClose : PropTypes.func.isRequired,\n// };","import styled from \"@emotion/styled\";\n\nexport const DeskPhonebook = styled.div`\n  /* min-width: 270px; */\n  margin-top: 50px;\n  padding: 30px;\n  border: 1px solid black;\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { MdAddIcCall } from 'react-icons/md';\n\n\n// redux\nimport { requestContactsThunk } from \"redux/operations\";\nimport { selectError, selectLoading, selectAuthetification } from \"redux/selectors\";\n\n// components\nimport { Loader } from \"components/Loader/Loader\";\nimport { Section } from \"../Section/Section\";\nimport { FormContact } from \"../Forms/FormContact/FormContact\";\nimport { Search } from \"./Search/Search\";\nimport { Filter } from \"./Filter/Filter\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\nimport { Modal } from 'components/Modal/Modal';\n\n// style\nimport { DeskPhonebook } from \"./Phonebook.styled\";\nimport { ButtonAddContact } from \"components/Forms/Buttons.styles\";\n\n\nexport const Phonebook = () => {\n  \n  const dispatch = useDispatch();\n\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const authetification = useSelector(selectAuthetification);\n\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() =>  {\n    dispatch(requestContactsThunk());\n  }, [dispatch]);\n\n  if (!authetification) return;\n\n  const handleAddContact = () => {toggleModal()}\n  \n  // відкриття / закриття модалки\n  const toggleModal = () => {\n    setShowModal( !showModal );\n  }\n\n\n  return (\n    <DeskPhonebook>\n\n      <Section>\n        <ButtonAddContact onClick={handleAddContact}>\n          Add contact\n          <MdAddIcCall size={24} />\n        </ButtonAddContact>\n      </Section>\n\n      <Section>\n        <Search />\n        <Filter />\n      </Section>\n      \n      <Section title={\"Contacts\"}>\n\n        { loading && <Loader />}\n        { error && <p>Error... { error }</p>}\n        { loading && !error && <b>Request in progress...</b> }\n        \n        <ContactsList />\n      </Section>\n      \n      { showModal && (\n          <Modal\n            // src={ selectedImage }\n            // tags={ tagsSelectedImage }\n            onClose={ toggleModal }\n          >\n            <FormContact onClose={ toggleModal }/>\n          </Modal> \n        )}\n    </DeskPhonebook>\n  )\n}\n","import { useSelector } from 'react-redux';\n// import { Navigate } from 'react-router-dom';\n\nimport {selectAuthetification, } from 'redux/selectors';\n// import { Container } from \"components/App/App.styled\";\nimport { Phonebook } from 'components/Phonebook/Phonebook';\n\nexport const ContactsPage = () => { \n\n  const authetificated = useSelector(selectAuthetification);\n  if (!authetificated) return;\n\n  return(\n    // <Container>\n      <Phonebook />\n    // </Container>\n  )\n}\n\nexport default ContactsPage"],"names":["Button","styled","ButtonDelete","ButtonEdit","ButtonAddContact","ButtonSaveContact","colorsValid","error","success","valid","invalid","FieldBox","props","FieldLabel","FieldInput","FieldPosition","FieldFeedback","FieldHelpText","Title","SectionApp","Section","title","children","FormContact","onClose","dispatch","useDispatch","contacts","useSelector","selectContacts","onSubmit","e","preventDefault","form","target","elements","name","number","findName","trim","toLowerCase","some","item","isFound","value","addContactThunk","toast","reset","type","pattern","required","Search","onChange","query","currentTarget","setFindQuery","Btn","FilterBox","Filter","filter","selectStatusFilter","isSelectedStyle","css","backgroundColor","color","btn","Object","keys","statusFilters","map","index","isSelected","selected","onClick","setStatusFilter","handleFilterChange","Card","Name","Checkbox","Contact","contact","id","checked","toggleCompletedThunk","editContactThunk","size","deleteContactThunk","List","ListItem","ContactsList","visibleContacts","selectVisibleContacts","Array","isArray","length","Overlay","BoxModal","ModalButtonClose","ModalTitle","ModalImage","modalRoot","document","querySelector","Modal","state","loaded","onLoadedLargeImage","setState","handleKeyDown","code","handleBackdropClick","handleCloseButtonClick","window","addEventListener","this","removeEventListener","src","createPortal","onLoad","alt","Component","DeskPhonebook","Phonebook","loading","selectLoading","selectError","authetification","selectAuthetification","useState","showModal","setShowModal","useEffect","requestContactsThunk","toggleModal","Loader","ContactsPage"],"sourceRoot":""}