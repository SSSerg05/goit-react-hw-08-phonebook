{"version":3,"file":"static/js/149.60df300d.chunk.js","mappings":"kQAOaA,EAAwB,SAAC,GAAmC,IAAD,EAAhCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAaC,GAAY,YACtE,GAAsBC,EAAAA,EAAAA,IAASD,GAA/B,eAAOE,EAAP,KAAcC,EAAd,KAKA,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,IACDF,GAAYH,EAAMM,MAAMC,OAAOC,OAAS,GAAMP,EAAKQ,QAExD,OACE,iBAAKC,UAAS,kDACVL,EAAgBJ,EAAKU,MAAQ,QAAU,UAAa,IADxD,WAME,mBAAOC,QAASd,EAAMe,GAAtB,UAA2BjB,GACzB,0CACEc,UAAS,UACPL,EAAgBJ,EAAKU,MAAQ,UAAY,QAAW,KAElDb,GACAE,GALN,IAME,6BAAqBF,EAAMe,GAA3B,qBAA0Cf,EAAMe,GAAhD,SACAC,QAnBY,kBAAMV,GAAY,EAAlB,QAuBdC,IACE,gBACEQ,GAAE,UAAKf,EAAMe,GAAX,aACF,YAAU,SACVH,UAAU,sBAHZ,mBAKGT,EAAKU,aALR,QAKiB,YAKrB,gBAAKD,UAAU,UAAUG,GAAE,UAAKf,EAAMe,GAAX,SAAsBE,SAAS,KAA1D,SACGlB,MAIR,C,kFCnDYmB,EAAQC,EAAAA,EAAAA,GAAH,4OAYLC,EAAaD,EAAAA,EAAAA,QAAH,gD,SCVVE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAACH,EAAD,WACIE,IAAS,SAACJ,EAAD,UAASI,IAClBC,IAGP,C,kNCHYC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAY,mCAAG,WAAOC,GAAP,yEACDC,EAAiCD,EAA3CE,UAA8BC,EAAaH,EAA1BI,aAGzBP,GACEQ,EAAAA,EAAAA,IAAe,CACbJ,MAAAA,EACAE,SAAAA,KAPe,2CAAH,sDAYZG,GAAeC,EAAAA,EAAAA,IAAU,CAC7BC,cAAe,CACbC,SAAU,GACVP,UAAW,GACXE,aAAc,IAEhBM,SAAS,WAAD,wBAAE,WAAOV,GAAP,0FAAkBD,EAAaC,IAA/B,2CAAF,mDAAC,GACTW,iBAAkBC,EAAAA,GAAW,CAE3BV,UAAWU,EAAAA,KACRC,QACC,sCACA,yBAEDC,SAAS,qBAEZV,aAAcQ,EAAAA,KACXG,IAAI,EAAG,iCACPD,SAAS,4BAIhB,OACE,SAAC,KAAD,CAAgBlC,MAAO0B,EAAvB,UACE,UAAC,KAAD,YACE,SAACrC,EAAA,EAAD,CACEC,MAAM,QACNiB,GAAG,YACH6B,KAAK,YACLC,YAAY,mBACZ9C,SAAS,GACT+C,KAAK,WAEP,SAACjD,EAAA,EAAD,CACEC,MAAM,WACNiB,GAAG,eACH6B,KAAK,eACLC,YAAY,iBACZ9C,SAAS,4BACT+C,KAAK,cAEP,0BACE,mBAAQA,KAAK,SAAb,SAAsB,eAExB,0BACE,SAAC,KAAD,CAASC,GAAI,YAAb,SAA2B,kBAKpC,E,oBCnEYC,EAAY,WAGvB,OADuBC,EAAAA,EAAAA,IAAYC,EAAAA,KACT,SAAC,KAAD,CAAUH,GAAG,eAIrC,SAAC1B,EAAA,EAAD,CAASC,MAAO,0BAAhB,UACE,SAACE,EAAD,KAGL,EAED,G","sources":["components/Forms/TextInputLiveFeedback/TextInputLiveFeedback.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Forms/FormLogin/FormLogin.jsx","pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {useField } from 'formik';\n\n\nimport './TextInputLiveFeedback.module.css'\n\n\nexport const TextInputLiveFeedback = ({ label, helpText, ...props }) => {\n  const [field, meta] = useField(props);\n\n  // Show inline feedback if EITHER\n  // - the input is focused AND value is longer than 2 characters\n  // - or, the has been visited (touched === true)\n  const [didFocus, setDidFocus] = useState(false);\n  const handleFocus = () => setDidFocus(true);\n  const showFeedback =\n    (!!didFocus && field.value.trim().length > 2) || meta.touched;\n\n  return (\n    <div className={`form-control items-center space-between ${\n        showFeedback ? (meta.error ? 'error' : 'success') : ''\n      }`}\n    >\n      {/* <div className=\"flex items-center space-between\"> */}\n\n      <label htmlFor={props.id}>{label}\n        <input\n          className={`${\n            showFeedback ? (meta.error ? 'invalid' : 'valid') : ''\n          }`}        \n          {...props}\n          {...field}\n          aria-describedby={`${props.id}-feedback ${props.id}-help`}\n          onFocus={handleFocus}\n        />\n      </label>\n\n      { showFeedback && (\n          <div\n            id={`${props.id}-feedback`}\n            aria-live=\"polite\"\n            className=\"my-feedback text-sm\"\n          >\n            {meta.error ?? 'âœ“'}\n          </div>\n      ) }\n\n      {/* </div> */}\n      <div className=\"text-xs\" id={`${props.id}-help`} tabIndex=\"-1\">\n        {helpText}\n      </div>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  min-width: 270px;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 16px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 0.05rem;\n  text-align: center;\n`\n\nexport const SectionApp = styled.section`\n  margin-bottom: 16px;\n`","import PropTypes from 'prop-types'; // ES6'\nimport { Title, SectionApp } from './Section.styled';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionApp>\n      { title && <Title>{ title }</Title> }\n      { children }\n    </SectionApp>\n  );\n}\n\nSection.propTypes = {\n  title : PropTypes.string,\n}","import { useDispatch } from 'react-redux';\nimport { NavLink } from \"react-router-dom\";\nimport { useFormik, FormikProvider, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { TextInputLiveFeedback } from 'components/Forms/TextInputLiveFeedback/TextInputLiveFeedback';\nimport { loginUserThunk } from '../../../redux/operations'\n\nexport const FormLogin = () => {\n  const dispatch = useDispatch()\n\n\n  const handleSubmit = async (values) => {\n    const { userEmail:email, userPassword:password } = values;\n    // console.log(values);\n    \n    dispatch(\n      loginUserThunk({\n        email,\n        password,\n    }));\n  }\n\n  // ==== configForm\n  const configFormik = useFormik({\n    initialValues: { \n      userName: \"\", \n      userEmail: \"\", \n      userPassword: \"\", \n    },\n    onSubmit: async (values) => handleSubmit(values),\n    validationSchema: Yup.object({\n\n      userEmail: Yup.string()\n        .matches(\n          /^[\\w._%+-]+@[\\w.-]+\\.[A-Za-z]{2,}$/i,\n          'Invalid email address'\n        )\n        .required('Email is required'),\n\n      userPassword: Yup.string()\n        .min(7, 'Must be at least 7 characters')\n        .required('Password is required'),\n    }),\n  });\n\n  return (\n    <FormikProvider value={configFormik}>\n      <Form>\n        <TextInputLiveFeedback\n          label=\"Email\"\n          id=\"userEmail\"\n          name=\"userEmail\"\n          placeholder=\"mister@gmail.com\" \n          helpText=\"\"\n          type=\"email\"\n        />\n        <TextInputLiveFeedback\n          label=\"Password\"\n          id=\"userPassword\"\n          name=\"userPassword\"\n          placeholder=\"Enter password\" \n          helpText=\"Must be more 7 characters\"\n          type=\"password\"\n        />\n        <div>\n          <button type=\"submit\">Sing In</button>\n        </div>\n        <div>\n          <NavLink to={'/register'} >Sing Up</NavLink>\n        </div>\n      </Form>\n    </FormikProvider>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { FormLogin } from \"components/Forms/FormLogin/FormLogin\"\nimport {selectAuthetification} from 'redux/selectors';\nimport { Section } from \"components/Section/Section\"\n\nexport const LoginPage = () => { \n  \n  const authetificated = useSelector(selectAuthetification);\n  if(authetificated) return <Navigate to='/contacts' />\n\n\n  return(\n    <Section title={'Login Into Your Account'}>\n      <FormLogin />\n    </Section>\n  )\n}\n\nexport default LoginPage"],"names":["TextInputLiveFeedback","label","helpText","props","useField","field","meta","useState","didFocus","setDidFocus","showFeedback","value","trim","length","touched","className","error","htmlFor","id","onFocus","tabIndex","Title","styled","SectionApp","Section","title","children","FormLogin","dispatch","useDispatch","handleSubmit","values","email","userEmail","password","userPassword","loginUserThunk","configFormik","useFormik","initialValues","userName","onSubmit","validationSchema","Yup","matches","required","min","name","placeholder","type","to","LoginPage","useSelector","selectAuthetification"],"sourceRoot":""}