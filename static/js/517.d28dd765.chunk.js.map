{"version":3,"file":"static/js/517.d28dd765.chunk.js","mappings":"4UAEO,IAAMA,GAAM,qUAuBNC,GAAe,OAAOD,EAAP,qBAAH,wCAIZE,GAAa,OAAOF,EAAP,qBAAH,yCAIVG,GAAmB,OAAOH,EAAP,qBAAH,oHAQhBI,GAAoB,OAAOJ,EAAP,qBAAH,2EAOjBK,GAAU,4IAOVC,GAAU,gG,uPCpDjBC,EAAc,CAClBC,MAAO,MACPC,QAAS,QACTC,MAAO,QACPC,QAAS,OAGEC,EAAWC,EAAAA,EAAAA,IAAH,yOAWV,SAACC,GAAD,uBACPP,EAAYO,EAAMJ,cADX,QACqB,MADrB,IAIEK,EAAaF,EAAAA,EAAAA,MAAH,8HAOVG,EAAaH,EAAAA,EAAAA,MAAH,8bAGC,SAACC,GAAD,uBACpBP,EAAYO,EAAMJ,cADE,QACQ,uBADR,IAmBXO,EAAgBJ,EAAAA,EAAAA,KAAH,mEAIbK,EAAgBL,EAAAA,EAAAA,IAAH,+FAMbM,EAAgBN,EAAAA,EAAAA,IAAH,4FAMbO,GAAOP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,6R,uJCzDJS,EAAwB,SAAC,GAAmC,IAAD,EAAhCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAaV,GAAY,YACtE,GAAsBW,EAAAA,EAAAA,IAASX,GAA/B,eAAOY,EAAP,KAAcC,EAAd,KAKA,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,IACDF,GAAYH,EAAMM,MAAMC,OAAOC,OAAS,GAAMP,EAAKQ,QAExD,OACI,UAAC,KAAD,CACEzB,MAASqB,EAAgBJ,EAAKnB,MAAQ,QAAU,UAAa,UAD/D,WAIE,UAAC,KAAD,CAAY4B,QAAStB,EAAMuB,GAA3B,UACId,GAEF,SAAC,KAAD,WAEE,SAAC,MAAD,wBACEb,MAASqB,EAAgBJ,EAAKnB,MAAQ,UAAY,QAAW,UAC7D8B,KAAK,OACLC,KAAK,OAGLC,UAAQ,GACJ1B,GACAY,GARN,IASE,6BAAqBZ,EAAMuB,GAA3B,qBAA0CvB,EAAMuB,GAAhD,SACAI,QAxBQ,kBAAMX,GAAY,EAAlB,UA+BZC,IACA,SAAC,KAAD,CACEM,GAAE,UAAKvB,EAAMuB,GAAX,aACF,YAAU,SAFZ,mBAIGV,EAAKnB,aAJR,QAIiB,YAInB,SAAC,KAAD,CACE6B,GAAE,UAAKvB,EAAMuB,GAAX,SACFK,SAAS,KAFX,SAIGlB,MAKV,C,qECnEM,IAAMmB,GAAK,0OAYLC,GAAU,qG,SCVVC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAACH,EAAD,WACIE,IAAS,SAACH,EAAD,UAASG,IAClBC,IAGP,C","sources":["components/Forms/Buttons.styles.jsx","components/Forms/Forms.styled.jsx","components/Forms/TextInputLiveFeedback/TextInputLiveFeedback.jsx","components/Section/Section.styled.js","components/Section/Section.jsx"],"sourcesContent":["import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 24px;\r\n  height: 32px;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: none;\r\n  border-radius: 4px;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n \r\n  &:hover {\r\n    color: white;\r\n    background-color: #f44336;\r\n  }\r\n\r\n  &:active {\r\n    color: white;\r\n    background-color: red;\r\n  }\r\n`\r\nexport const ButtonDelete = styled(Button)`\r\n  color: #f44336;\r\n`\r\n\r\nexport const ButtonEdit = styled(Button)`\r\n  color: #1976d2;\r\n`\r\n\r\nexport const ButtonAddContact = styled(Button)`\r\n  width: 150px;\r\n  height: 37px;\r\n  justify-content: space-around;\r\n  color: green;\r\n  background-color: #e2e5e8;\r\n`\r\n\r\nexport const ButtonSaveContact = styled(Button)`\r\n  /* margin-top: 48px; */\r\n  width: 68px;\r\n  color: white;\r\n  background-color: #1976d2;\r\n`\r\n\r\nexport const ButtonsBox = styled.div`\r\n  margin-top: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 24px;\r\n`\r\nexport const TextButton = styled.span`\r\n  display: inline-block;\r\n  font-size: 1rem;\r\n`","import styled from \"@emotion/styled\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst colorsValid = { \r\n  error: 'red',       // textError + textHelp\r\n  success: 'green',   // textError + textHelp\r\n  valid: 'green',     // border input\r\n  invalid: 'red',     // border input\r\n}\r\n\r\nexport const FieldBox = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  position: relative;\r\n  color: var(--color-text);\r\n  background-color: var(--color-bg);\r\n\r\n  margin-bottom: 1rem;\r\n  margin-top: 1rem;\r\n\r\n  color: ${(props) =>\r\n    colorsValid[props.valid] ?? 'gray'}; \r\n`\r\n\r\nexport const FieldLabel = styled.label`\r\n  display: block;\r\n  width: 100%;\r\n  color: var(--color-text);\r\n  background-color: var(--color-bg);\r\n`\r\n\r\nexport const FieldInput = styled.input`\r\n  display: block;\r\n  width: calc(100% - 2*4px);\r\n  outline: 1px solid  ${(props) =>\r\n    colorsValid[props.valid] ?? 'rgba(33, 33, 33, 0.2)'}; \r\n  background-color:  var(--color-bgi);\r\n  color: var(--color-text);\r\n  border-radius: 4px;\r\n  border: none;\r\n  margin-top: 4px;\r\n  padding: 8px 4px;\r\n\r\n\r\n  &:hover,\r\n  &:focus-within {\r\n    outline: 1px solid blue;\r\n    background-color: rgb(232, 240, 254);\r\n    color: black;\r\n    transition: outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n`\r\n\r\nexport const FieldPosition = styled.span`\r\n  position: relative;\r\n  margin-top: 4px;\r\n`\r\nexport const FieldFeedback = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  font-size: 0.875rem;\r\n`\r\nexport const FieldHelpText = styled.div`\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  font-size: 0.75rem;\r\n`\r\n\r\nexport const Link = styled(NavLink)`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding: 0;\r\n  text-decoration: none;\r\n  \r\n  font-weight: 500;\r\n  border-radius: 4px;\r\n  border: none;\r\n  color:  #1976d2;;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: orangered;\r\n  }\r\n  &:active {\r\n    color: red;\r\n  }\r\n`;","import React, { useState } from 'react';\r\nimport {useField } from 'formik';\r\n\r\n// style\r\nimport { \r\n  FieldBox, \r\n  FieldLabel, \r\n  FieldPosition, \r\n  FieldInput, \r\n  FieldHelpText, \r\n  FieldFeedback} from \"../Forms.styled\"\r\n\r\n\r\nexport const TextInputLiveFeedback = ({ label, helpText, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  // Show inline feedback if EITHER\r\n  // - the input is focused AND value is longer than 2 characters\r\n  // - or, the has been visited (touched === true)\r\n  const [didFocus, setDidFocus] = useState(false);\r\n  const handleFocus = () => setDidFocus(true);\r\n  const showFeedback =\r\n    (!!didFocus && field.value.trim().length > 2) || meta.touched;\r\n\r\n  return (\r\n      <FieldBox\r\n        valid = {showFeedback ? (meta.error ? 'error' : 'success') : 'default'}\r\n      >\r\n        \r\n        <FieldLabel htmlFor={props.id}>\r\n          { label } \r\n          \r\n          <FieldPosition >\r\n            \r\n            <FieldInput\r\n              valid = {showFeedback ? (meta.error ? 'invalid' : 'valid') : 'default'}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              // pattern=\"^[a-zA-Zа-яА-ЯіІїЇєЄ]+(([' \\-][a-zA-Zа-яА-ЯіІїЇєЄ])?[a-zA-Zа-яА-ЯіІїЇєЄ]*)*$\"\r\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              {...props}\r\n              {...field}\r\n              aria-describedby={`${props.id}-feedback ${props.id}-help`}\r\n              onFocus={handleFocus}\r\n            />\r\n\r\n          </FieldPosition>\r\n\r\n        </FieldLabel>\r\n        \r\n        { showFeedback && (\r\n          <FieldFeedback \r\n            id={`${props.id}-feedback`}\r\n            aria-live=\"polite\"\r\n          >\r\n            {meta.error ?? '✓'}\r\n          </FieldFeedback>\r\n        )}\r\n\r\n        <FieldHelpText\r\n          id={`${props.id}-help`}\r\n          tabIndex=\"-1\"\r\n        >\r\n          {helpText}\r\n        </FieldHelpText>\r\n\r\n      </FieldBox>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Title = styled.h3`\r\n  margin: 0;\r\n  padding: 0;\r\n  margin-bottom: 16px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n  letter-spacing: 0.05rem;\r\n  text-align: center;\r\n  color: var(--color-text);\r\n`\r\n\r\nexport const SectionApp = styled.section`\r\n  margin-top: 16px;\r\n  margin-bottom: 16px;\r\n`","import PropTypes from 'prop-types'; // ES6'\r\nimport { Title, SectionApp } from './Section.styled';\r\n\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <SectionApp>\r\n      { title && <Title>{ title }</Title> }\r\n      { children }\r\n    </SectionApp>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title : PropTypes.string,\r\n}"],"names":["Button","ButtonDelete","ButtonEdit","ButtonAddContact","ButtonSaveContact","ButtonsBox","TextButton","colorsValid","error","success","valid","invalid","FieldBox","styled","props","FieldLabel","FieldInput","FieldPosition","FieldFeedback","FieldHelpText","Link","NavLink","TextInputLiveFeedback","label","helpText","useField","field","meta","useState","didFocus","setDidFocus","showFeedback","value","trim","length","touched","htmlFor","id","type","name","required","onFocus","tabIndex","Title","SectionApp","Section","title","children"],"sourceRoot":""}