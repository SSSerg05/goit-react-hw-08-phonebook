{"version":3,"file":"static/js/517.d28dd765.chunk.js","mappings":"4UAEO,IAAMA,GAAM,qUAuBNC,GAAe,OAAOD,EAAP,qBAAH,wCAIZE,GAAa,OAAOF,EAAP,qBAAH,yCAIVG,GAAmB,OAAOH,EAAP,qBAAH,oHAQhBI,GAAoB,OAAOJ,EAAP,qBAAH,2EAOjBK,GAAU,4IAOVC,GAAU,gG,uPCpDjBC,EAAc,CAClBC,MAAO,MACPC,QAAS,QACTC,MAAO,QACPC,QAAS,OAGEC,EAAWC,EAAAA,EAAAA,IAAH,yOAWV,SAACC,GAAD,uBACPP,EAAYO,EAAMJ,cADX,QACqB,MADrB,IAIEK,EAAaF,EAAAA,EAAAA,MAAH,8HAOVG,EAAaH,EAAAA,EAAAA,MAAH,8bAGC,SAACC,GAAD,uBACpBP,EAAYO,EAAMJ,cADE,QACQ,uBADR,IAmBXO,EAAgBJ,EAAAA,EAAAA,KAAH,mEAIbK,EAAgBL,EAAAA,EAAAA,IAAH,+FAMbM,EAAgBN,EAAAA,EAAAA,IAAH,4FAMbO,GAAOP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,6R,uJCzDJS,EAAwB,SAAC,GAAmC,IAAD,EAAhCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAaV,GAAY,YACtE,GAAsBW,EAAAA,EAAAA,IAASX,GAA/B,eAAOY,EAAP,KAAcC,EAAd,KAKA,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,IACDF,GAAYH,EAAMM,MAAMC,OAAOC,OAAS,GAAMP,EAAKQ,QAExD,OACI,UAAC,KAAD,CACEzB,MAASqB,EAAgBJ,EAAKnB,MAAQ,QAAU,UAAa,UAD/D,WAIE,UAAC,KAAD,CAAY4B,QAAStB,EAAMuB,GAA3B,UACId,GAEF,SAAC,KAAD,WAEE,SAAC,MAAD,wBACEb,MAASqB,EAAgBJ,EAAKnB,MAAQ,UAAY,QAAW,UAC7D8B,KAAK,OACLC,KAAK,OAGLC,UAAQ,GACJ1B,GACAY,GARN,IASE,6BAAqBZ,EAAMuB,GAA3B,qBAA0CvB,EAAMuB,GAAhD,SACAI,QAxBQ,kBAAMX,GAAY,EAAlB,UA+BZC,IACA,SAAC,KAAD,CACEM,GAAE,UAAKvB,EAAMuB,GAAX,aACF,YAAU,SAFZ,mBAIGV,EAAKnB,aAJR,QAIiB,YAInB,SAAC,KAAD,CACE6B,GAAE,UAAKvB,EAAMuB,GAAX,SACFK,SAAS,KAFX,SAIGlB,MAKV,C,qECnEM,IAAMmB,GAAK,0OAYLC,GAAU,qG,SCVVC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,UAACH,EAAD,WACIE,IAAS,SAACH,EAAD,UAASG,IAClBC,IAGP,C","sources":["components/Forms/Buttons.styles.jsx","components/Forms/Forms.styled.jsx","components/Forms/TextInputLiveFeedback/TextInputLiveFeedback.jsx","components/Section/Section.styled.js","components/Section/Section.jsx"],"sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 4px;\n  background-color: transparent;\n  cursor: pointer;\n \n  &:hover {\n    color: white;\n    background-color: #f44336;\n  }\n\n  &:active {\n    color: white;\n    background-color: red;\n  }\n`\nexport const ButtonDelete = styled(Button)`\n  color: #f44336;\n`\n\nexport const ButtonEdit = styled(Button)`\n  color: #1976d2;\n`\n\nexport const ButtonAddContact = styled(Button)`\n  width: 150px;\n  height: 37px;\n  justify-content: space-around;\n  color: green;\n  background-color: #e2e5e8;\n`\n\nexport const ButtonSaveContact = styled(Button)`\n  /* margin-top: 48px; */\n  width: 68px;\n  color: white;\n  background-color: #1976d2;\n`\n\nexport const ButtonsBox = styled.div`\n  margin-top: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n`\nexport const TextButton = styled.span`\n  display: inline-block;\n  font-size: 1rem;\n`","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nconst colorsValid = { \n  error: 'red',       // textError + textHelp\n  success: 'green',   // textError + textHelp\n  valid: 'green',     // border input\n  invalid: 'red',     // border input\n}\n\nexport const FieldBox = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n  color: var(--color-text);\n  background-color: var(--color-bg);\n\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n\n  color: ${(props) =>\n    colorsValid[props.valid] ?? 'gray'}; \n`\n\nexport const FieldLabel = styled.label`\n  display: block;\n  width: 100%;\n  color: var(--color-text);\n  background-color: var(--color-bg);\n`\n\nexport const FieldInput = styled.input`\n  display: block;\n  width: calc(100% - 2*4px);\n  outline: 1px solid  ${(props) =>\n    colorsValid[props.valid] ?? 'rgba(33, 33, 33, 0.2)'}; \n  background-color:  var(--color-bgi);\n  color: var(--color-text);\n  border-radius: 4px;\n  border: none;\n  margin-top: 4px;\n  padding: 8px 4px;\n\n\n  &:hover,\n  &:focus-within {\n    outline: 1px solid blue;\n    background-color: rgb(232, 240, 254);\n    color: black;\n    transition: outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`\n\nexport const FieldPosition = styled.span`\n  position: relative;\n  margin-top: 4px;\n`\nexport const FieldFeedback = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  font-size: 0.875rem;\n`\nexport const FieldHelpText = styled.div`\n  padding-left: 4px;\n  padding-right: 4px;\n  font-size: 0.75rem;\n`\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n\n  padding: 0;\n  text-decoration: none;\n  \n  font-weight: 500;\n  border-radius: 4px;\n  border: none;\n  color:  #1976d2;;\n\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n  &:active {\n    color: red;\n  }\n`;","import React, { useState } from 'react';\nimport {useField } from 'formik';\n\n// style\nimport { \n  FieldBox, \n  FieldLabel, \n  FieldPosition, \n  FieldInput, \n  FieldHelpText, \n  FieldFeedback} from \"../Forms.styled\"\n\n\nexport const TextInputLiveFeedback = ({ label, helpText, ...props }) => {\n  const [field, meta] = useField(props);\n\n  // Show inline feedback if EITHER\n  // - the input is focused AND value is longer than 2 characters\n  // - or, the has been visited (touched === true)\n  const [didFocus, setDidFocus] = useState(false);\n  const handleFocus = () => setDidFocus(true);\n  const showFeedback =\n    (!!didFocus && field.value.trim().length > 2) || meta.touched;\n\n  return (\n      <FieldBox\n        valid = {showFeedback ? (meta.error ? 'error' : 'success') : 'default'}\n      >\n        \n        <FieldLabel htmlFor={props.id}>\n          { label } \n          \n          <FieldPosition >\n            \n            <FieldInput\n              valid = {showFeedback ? (meta.error ? 'invalid' : 'valid') : 'default'}\n              type=\"text\"\n              name=\"name\"\n              // pattern=\"^[a-zA-Zа-яА-ЯіІїЇєЄ]+(([' \\-][a-zA-Zа-яА-ЯіІїЇєЄ])?[a-zA-Zа-яА-ЯіІїЇєЄ]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              {...props}\n              {...field}\n              aria-describedby={`${props.id}-feedback ${props.id}-help`}\n              onFocus={handleFocus}\n            />\n\n          </FieldPosition>\n\n        </FieldLabel>\n        \n        { showFeedback && (\n          <FieldFeedback \n            id={`${props.id}-feedback`}\n            aria-live=\"polite\"\n          >\n            {meta.error ?? '✓'}\n          </FieldFeedback>\n        )}\n\n        <FieldHelpText\n          id={`${props.id}-help`}\n          tabIndex=\"-1\"\n        >\n          {helpText}\n        </FieldHelpText>\n\n      </FieldBox>\n  );\n};\n","import styled from \"@emotion/styled/macro\";\n\nexport const Title = styled.h3`\n  margin: 0;\n  padding: 0;\n  margin-bottom: 16px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 0.05rem;\n  text-align: center;\n  color: var(--color-text);\n`\n\nexport const SectionApp = styled.section`\n  margin-top: 16px;\n  margin-bottom: 16px;\n`","import PropTypes from 'prop-types'; // ES6'\nimport { Title, SectionApp } from './Section.styled';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionApp>\n      { title && <Title>{ title }</Title> }\n      { children }\n    </SectionApp>\n  );\n}\n\nSection.propTypes = {\n  title : PropTypes.string,\n}"],"names":["Button","ButtonDelete","ButtonEdit","ButtonAddContact","ButtonSaveContact","ButtonsBox","TextButton","colorsValid","error","success","valid","invalid","FieldBox","styled","props","FieldLabel","FieldInput","FieldPosition","FieldFeedback","FieldHelpText","Link","NavLink","TextInputLiveFeedback","label","helpText","useField","field","meta","useState","didFocus","setDidFocus","showFeedback","value","trim","length","touched","htmlFor","id","type","name","required","onFocus","tabIndex","Title","SectionApp","Section","title","children"],"sourceRoot":""}