{"version":3,"file":"static/js/698.3a792522.chunk.js","mappings":"4UASaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAY,mCAAG,WAAOC,GAAP,2EACHC,EAAgDD,EAAzDE,SAAyBC,EAAgCH,EAA1CI,UAA8BC,EAAYL,EAAzBM,aAEvCT,GACEU,EAAAA,EAAAA,IAAkB,CAChBN,KAAAA,EACAE,MAAAA,EACAE,SAAAA,KAPe,2CAAH,sDAaZG,GAAeC,EAAAA,EAAAA,IAAU,CAC7BC,cAAe,CACbR,SAAU,GACVE,UAAW,GACXE,aAAc,IAEhBK,SAAS,WAAD,wBAAE,WAAOX,GAAP,0FAAkBD,EAAaC,IAA/B,2CAAF,mDAAC,GACTY,iBAAkBC,EAAAA,GAAW,CAE3BX,SAAUW,EAAAA,KACPC,IAAI,EAAG,iCACPC,IAAI,GAAI,mCACRC,QACC,aACA,+CAEDC,SAAS,wBAEZb,UAAWS,EAAAA,KACRG,QACC,4CACA,yBAEDC,SAAS,qBAEZX,aAAcO,EAAAA,KACXC,IAAI,EAAG,iCACPG,SAAS,4BAIhB,OACE,SAAC,KAAD,CAAgBC,MAAOV,EAAvB,UACE,UAAC,KAAD,YACA,SAACW,EAAA,EAAD,CACIC,MAAM,WACNC,GAAG,WACHpB,KAAK,WACLqB,YAAY,kBACZC,SAAS,iEACTC,KAAK,UAEP,SAACL,EAAA,EAAD,CACEM,KAAK,OACLL,MAAM,QACNC,GAAG,YACHpB,KAAK,YACLqB,YAAY,gBACZC,SAAS,qBACTC,KAAK,WAEP,SAACL,EAAA,EAAD,CACEC,MAAM,WACNC,GAAG,eACHpB,KAAK,eACLqB,YAAY,iBACZC,SAAS,4BACTC,KAAK,cAGP,UAAC,KAAD,YACE,SAAC,KAAD,CAAcA,KAAK,SAAnB,SAA4B,aAC5B,SAAC,KAAD,CAAaA,KAAK,QAAlB,SAA0B,iBAOnC,EC5FYE,EAAe,WAE1B,OACE,SAACC,EAAA,EAAD,CAASC,MAAM,wBAAf,UACE,SAAChC,EAAD,KAGL,EAED,G","sources":["components/Forms/FormRegister/FormRegister.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useFormik, FormikProvider, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { registerUserThunk } from '../../../redux/auth/authOperations'\n// style\nimport { TextInputLiveFeedback } from 'components/Forms/TextInputLiveFeedback/TextInputLiveFeedback';\nimport { ButtonSaveContact as ButtonSignUp, ButtonSaveContact as ButtonReset, ButtonsBox } from '../Buttons.styles';\n\nexport const FormRegister = () => {\n  const dispatch = useDispatch()\n\n\n  const handleSubmit = async (values) => {\n    const {userName:name, userEmail:email, userPassword:password} = values;\n    \n    dispatch(\n      registerUserThunk({\n        name,\n        email,\n        password,\n    }))\n    \n  }\n\n  // ==== configFormik\n  const configFormik = useFormik({\n    initialValues: { \n      userName: \"\", \n      userEmail: \"\", \n      userPassword: \"\", \n    },\n    onSubmit: async (values) => handleSubmit(values),\n    validationSchema: Yup.object({\n\n      userName: Yup.string()\n        .min(3, 'Must be at least 3 characters')\n        .max(40, 'Must be less than 40 characters')\n        .matches(\n          /^[\\w-/']+$/,\n          'Cannot contain special characters or spaces'\n        )\n        .required('Username is required'),\n\n      userEmail: Yup.string()\n        .matches(\n          /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n          'Invalid email address'\n        )\n        .required('Email is required'),\n\n      userPassword: Yup.string()\n        .min(7, 'Must be at least 7 characters')\n        .required('Password is required'),\n    }),\n  });\n \n  return (\n    <FormikProvider value={configFormik}>\n      <Form>\n      <TextInputLiveFeedback\n          label=\"Username\"\n          id=\"userName\"\n          name=\"userName\"\n          placeholder=\"Enter your name\" \n          helpText=\"Must be 3-40 characters and cannot contain special characters.\"\n          type=\"text\"\n        />\n        <TextInputLiveFeedback\n          icon='mail'\n          label=\"Email\"\n          id=\"userEmail\"\n          name=\"userEmail\"\n          placeholder=\"user@mail.com\" \n          helpText=\"x.0-9_+x@x.0-9x.xx\"\n          type=\"email\"\n        />\n        <TextInputLiveFeedback\n          label=\"Password\"\n          id=\"userPassword\"\n          name=\"userPassword\"\n          placeholder=\"Enter password\" \n          helpText=\"Must be more 7 characters\"\n          type=\"password\"\n        />\n\n        <ButtonsBox>\n          <ButtonSignUp type=\"submit\">Sing Up</ButtonSignUp>\n          <ButtonReset type=\"reset\">Reset</ButtonReset>\n        </ButtonsBox>\n\n      </Form>\n    </FormikProvider>\n  );\n\n}","import { Section } from \"components/Section/Section\"\nimport { FormRegister } from \"components/Forms/FormRegister/FormRegister\"\n\nexport const RegisterPage = () => { \n\n  return(\n    <Section title='Register Your Account'>\n      <FormRegister /> \n    </Section>\n  )\n}\n\nexport default RegisterPage"],"names":["FormRegister","dispatch","useDispatch","handleSubmit","values","name","userName","email","userEmail","password","userPassword","registerUserThunk","configFormik","useFormik","initialValues","onSubmit","validationSchema","Yup","min","max","matches","required","value","TextInputLiveFeedback","label","id","placeholder","helpText","type","icon","RegisterPage","Section","title"],"sourceRoot":""}