{"version":3,"file":"static/js/917.87e45113.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/Forms/FormContact/FormContact.styled.jsx","components/Phonebook/Search/Search.jsx","components/Phonebook/Filter/Filter.styled.jsx","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Contact/Contact.styled.jsx","components/Forms/Buttons.styles.jsx","components/Phonebook/Contact/Contact.jsx","components/Phonebook/ContactsList/ContactsList.styled.jsx","components/Phonebook/ContactsList/ContactsList.jsx","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/Phonebook.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  min-width: 270px;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 16px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 0.05rem;\n  text-align: center;\n`\n\nexport const SectionApp = styled.section`\n  margin-bottom: 16px;\n`","import PropTypes from 'prop-types'; // ES6'\nimport { Title, SectionApp } from './Section.styled';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionApp>\n      { title && <Title>{ title }</Title> }\n      { children }\n    </SectionApp>\n  );\n}\n\nSection.propTypes = {\n  title : PropTypes.string,\n}","import styled from \"@emotion/styled\";\n\nexport const FieldBox = styled.div`\n  position: relative;\n  margin-bottom: 8px;\n`\n\nexport const FieldLabel = styled.label`\n  display: block;\n  padding: 0 4px;\n`\n\nexport const FieldInput = styled.input`\n    display: block;\n\n    width: 100%;\n    /* min-width: 210px; // 270-30-30 */\n    outline: 1px solid rgba(33, 33, 33, 0.2);\n    background-color: transparent;\n    border-radius: 4px;\n    border: none;\n\n    padding: 8px;\n\n    &:hover,\n    &:focus-within {\n      outline: 1px solid blue;\n      background-color: rgb(232, 240, 254);\n      transition: outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    }\n`\n\nexport const FieldPosition = styled.span`\n  position: relative;\n  margin-top: 4px;\n`\n\n// export const Button = styled.button`\n//   display: inline-block;\n//   width: 100px;\n//   padding: 20px;\n//   margin: 10px;\n//   border: none;\n//   outline: 1px solid black;\n//   border-radius: 10px;\n//   transition: background-color 150ms ease-in, \n//               color 150ms ease-in,\n//               font-weight 150ms ease-in;\n\n//   &:hover, &:active {\n//     cursor: pointer;\n//     font-weight: 700;\n//     letter-spacing: 0.03rem;  \n//     background-color: #1976d2;\n//     color: #fff;\n//     border: 1px solit black;\n//   }\n\n//   &:active {\n//     background-color: tomato;\n//     transition: background-color 150ms ease-in,\n//                 color 150ms ease-in;\n//   }\n// `","import { useDispatch } from \"react-redux\"; \n\nimport { setFindQuery } from \"redux/findQuerySlice\";\n\n// style\nimport { FieldBox, FieldLabel, FieldPosition, FieldInput } from \"../../Forms/FormContact/FormContact.styled\"\n\n\nexport const Search = ({value}) => {\n  const dispatch = useDispatch();\n\n  const handleSearchChange = (e) => {\n    const query = e.currentTarget.value.trim().toLowerCase();\n    return dispatch(setFindQuery(query))\n  }\n\n  return (\n    <FieldBox>\n      <FieldLabel>Find contacts by name\n        <FieldPosition>\n          <FieldInput\n            type=\"text\"\n            value={value}\n            onChange={handleSearchChange}\n          />\n        </FieldPosition>\n      </FieldLabel>\n    </FieldBox>\n  )\n}","import styled from \"@emotion/styled\";\n\n\nexport const Btn = styled.button`\n  display: inline-flex;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  \n  font: inherit;\n  text-transform: capitalize;\n\n  cursor: pointer;\n  background-color: #e2e5e8;\n  color: black;\n\n  &:hover, &:active {\n    cursor: pointer;\n    background-color: #1976d2;\n    color: #fff;\n  }\n\n  &:active {\n    background-color: tomato;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);;\n  }\n`\nexport const FilterBox = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-top: 12px;\n`","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { useSelector, useDispatch } from \"react-redux\"; \n\n\nimport { statusFilters } from \"redux/constants\"; \nimport { selectStatusFilter } from \"redux/selectors\";\nimport { setStatusFilter } from \"redux/filtersSlice\";\n\nimport { Btn, FilterBox } from \"./Filter.styled\";\n\n\nexport const Filter = () => { \n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n  // const handleSearchChange = query => dispatch(searchContact(query))\n\n\n  const isSelectedStyle = css({\n    backgroundColor: '#1976d2',\n    color: '#fff',\n  });\n\n  const btn = Object.keys(statusFilters)\n  return (\n    <FilterBox>\n      {\n        btn.map((item, index) => {\n          const isSelected = (filter === statusFilters[item]);\n          \n          return (<Btn \n              css={ isSelected && isSelectedStyle }\n              key={`${index}-${item}`}\n              selected={isSelected}\n              onClick={() => handleFilterChange(statusFilters[item])}\n            >\n              {item}\n            </Btn>\n          )}\n        )\n      }\n    </FilterBox>\n  );\n  \n}\n\n","import styled from \"@emotion/styled\";\n\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n`\n\nexport const Name = styled.p`\n  width: 100%;\n  /* min-width: 200px; */\n  margin: 0;\n  padding: 4px;\n  flex-grow: 1;\n`\n// export const Button = styled.button`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 32px;\n//   height: 32px;\n//   padding: 0;\n//   margin: 0;\n//   margin-right: 12px;\n//   border: none;\n//   border-radius: 4px;\n//   background-color: transparent;\n//   cursor: pointer;\n \n//   &:hover {\n//     color: white;\n//     background-color: #f44336;\n//   }\n\n//   &:active {\n//     color: white;\n//     background-color: red;\n//   }\n// `\n// export const ButtonDelete = styled(Button)`\n//   color: #f44336;\n// `\n\n// export const ButtonEdit = styled(Button)`\n//   color: darkgray;\n// `\n\nexport const Checkbox = styled.input`\n  width: 24px;\n  height: 24px;\n  margin-left: 12px;\n  cursor: pointer;\n`\n","import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  margin-right: 12px;\n  border: none;\n  border-radius: 4px;\n  background-color: transparent;\n  cursor: pointer;\n  color: #fff;\n \n  &:hover {\n    color: white;\n    background-color: #f44336;\n  }\n\n  &:active {\n    color: white;\n    background-color: red;\n  }\n`\nexport const ButtonDelete = styled(Button)`\n  color: #f44336;\n`\n\nexport const ButtonEdit = styled(Button)`\n  color: #1976d2;\n`\n\nexport const ButtonAddContact = styled(Button)`\n  color: green;\n`","import { useDispatch } from 'react-redux';\nimport { MdClose, MdEdit } from 'react-icons/md';\nimport PropTypes from 'prop-types'; // ES6'\n\nimport { deleteContactThunk, toggleCompletedThunk, editContactThunk, } from \"redux/operations\";\n\nimport { Card, Name, Checkbox } from './Contact.styled';\nimport { ButtonDelete, ButtonEdit } from '../../Forms/Buttons.styles';\n\nexport const Contact = ({contact}) => {\n  const dispatch = useDispatch();\n  const {id, name, number, selected=false} = contact;\n\n  const handleEdit = () => dispatch(editContactThunk(id));\n  const handleDelete = () => dispatch(deleteContactThunk(id));\n  const handleToggle = () => dispatch(toggleCompletedThunk(contact));\n\n  return (\n    <Card>\n\n      <label>\n        <Checkbox \n          type=\"checkbox\"\n          checked={ selected }\n          onChange={ handleToggle } \n        />\n      </label>\n\n      <Name>{ name + ': ' + number }</Name>\n\n      <ButtonEdit onClick={ handleEdit}>\n        <MdEdit size={24} /> \n      </ButtonEdit>\n\n      <ButtonDelete onClick={ handleDelete }>\n        <MdClose size={24} />\n      </ButtonDelete>\n     \n    </Card>\n  )\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  text-decoration: none;\n  margin: 0;\n  padding-left: 0;\n  list-style: none;\n`\nexport const ListItem = styled.li`\n  background-color: lightsteelblue;\n\n  &:nth-of-type(odd) {\n    background-color: lightcyan;\n  }\n`\n\nexport const ItemButton = styled.button`\n  display: inline-block;\n  outline: 1px solid black;\n  border: none;\n  min-width: 75px;\n  height: 24px;\n  margin: 0;\n  padding: 0;\n  margin-right: 10px;\n  border-radius: 5px;\n\n  &:hover, &:active {\n    cursor: pointer;\n    background-color: cyan;\n    border: 1px solit black;\n  }\n\n  &:active {\n    background-color: tomato;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);;\n  }\n`\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { Contact } from '../Contact/Contact';\nimport { List, ListItem, } from './ContactsList.styled';\n\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const showContacts = Array.isArray(visibleContacts) && visibleContacts.length > 0;\n  \n  if (!showContacts) {\n    return (\n      <p>Sorry, you don't have more contacts</p>\n    )\n  }\n\n  return (\n    <List>\n      {\n        visibleContacts.map((item) =>\n          <ListItem key={ item.id }>\n            <Contact contact={ item } />\n          </ListItem>)\n      }\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\n\n\nexport const DeskPhonebook = styled.div`\n  /* min-width: 270px; */\n  margin-top: 50px;\n  padding: 30px;\n  border: 1px solid black;\n`\n\n// export const Button = styled.button`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 32px;\n//   height: 32px;\n//   padding: 0;\n//   margin: 0;\n//   margin-right: 12px;\n//   border: none;\n//   border-radius: 4px;\n//   background-color: transparent;\n//   cursor: pointer;\n \n//   &:hover {\n//     color: white;\n//     background-color: #f44336;\n//   }\n\n//   &:active {\n//     color: white;\n//     background-color: red;\n//   }\n// `\n// export const ButtonDelete = styled(Button)`\n//   color: #f44336;\n// `","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { MdAddIcCall } from 'react-icons/md';\n\n// redux\nimport { requestContactsThunk } from \"redux/operations\";\nimport { selectError, selectLoading, selectAuthetification } from \"redux/selectors\";\n\n// components\nimport { Loader } from \"components/Loader/Loader\";\nimport { Section } from \"../Section/Section\";\n// import { Form } from \"../Forms/FormContact/FormContact\";\nimport { Search } from \"./Search/Search\";\nimport { Filter } from \"./Filter/Filter\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\n\n// style\nimport { DeskPhonebook } from \"./Phonebook.styled\";\nimport { ButtonAddContact } from \"components/Forms/Buttons.styles\";\n\n\nexport const Phonebook = () => {\n  \n  const dispatch = useDispatch();\n\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const authetification = useSelector(selectAuthetification);\n\n  useEffect(() =>  {\n    dispatch(requestContactsThunk());\n  }, [dispatch]);\n\n  if (!authetification) return;\n\n  const handleAddContact = () => {dispatch()}\n  \n  return (\n    <DeskPhonebook>\n\n      <Section title={\"Phonebook: HW-08\"}>\n        {/* <Form /> */}\n        <ButtonAddContact onClick={handleAddContact}>\n          <MdAddIcCall size={24} />\n        </ButtonAddContact>\n      </Section>\n\n      <Section>\n        <Search />\n        <Filter />\n      </Section>\n      \n      <Section title={\"Contacts\"}>\n\n        { loading && <Loader />}\n        { error && <p>Error... { error }</p>}\n        { loading && !error && <b>Request in progress...</b> }\n        \n        <ContactsList />\n      </Section>\n    </DeskPhonebook>\n  )\n}\n","import { useSelector } from 'react-redux';\n// import { Navigate } from 'react-router-dom';\n\nimport {selectAuthetification, } from 'redux/selectors';\n// import { Container } from \"components/App/App.styled\";\nimport { Phonebook } from 'components/Phonebook/Phonebook';\n\nexport const ContactsPage = () => { \n\n  const authetificated = useSelector(selectAuthetification);\n  if (!authetificated) return;\n\n  return(\n    // <Container>\n      <Phonebook />\n    // </Container>\n  )\n}\n\nexport default ContactsPage"],"names":["Title","styled","SectionApp","Section","title","children","FieldBox","FieldLabel","FieldInput","FieldPosition","Search","value","dispatch","useDispatch","type","onChange","e","query","currentTarget","trim","toLowerCase","setFindQuery","Btn","FilterBox","Filter","filter","useSelector","selectStatusFilter","isSelectedStyle","css","backgroundColor","color","btn","Object","keys","statusFilters","map","item","index","isSelected","selected","onClick","setStatusFilter","handleFilterChange","Card","Name","Checkbox","Button","ButtonDelete","ButtonEdit","ButtonAddContact","Contact","contact","id","name","number","checked","toggleCompletedThunk","editContactThunk","size","deleteContactThunk","List","ListItem","ContactsList","visibleContacts","selectVisibleContacts","Array","isArray","length","DeskPhonebook","Phonebook","loading","selectLoading","error","selectError","authetification","selectAuthetification","useEffect","requestContactsThunk","Loader","ContactsPage"],"sourceRoot":""}