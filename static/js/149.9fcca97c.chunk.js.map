{"version":3,"file":"static/js/149.9fcca97c.chunk.js","mappings":"mVAUaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAY,mCAAG,WAAOC,GAAP,yEACDC,EAAiCD,EAA3CE,UAA8BC,EAAaH,EAA1BI,aAEzBP,GACEQ,EAAAA,EAAAA,IAAe,CACbJ,MAAAA,EACAE,SAAAA,KANe,2CAAH,sDAWZG,GAAeC,EAAAA,EAAAA,IAAU,CAC7BC,cAAe,CACbN,UAAW,GACXE,aAAc,IAEhBK,SAAS,WAAD,wBAAE,WAAOT,GAAP,0FAAkBD,EAAaC,IAA/B,2CAAF,mDAAC,GACTU,iBAAkBC,EAAAA,GAAW,CAE3BT,UAAWS,EAAAA,KACRC,QACC,sCACA,yBAEDC,SAAS,qBAEZT,aAAcO,EAAAA,KACXG,IAAI,EAAG,iCACPD,SAAS,4BAIhB,OACE,SAAC,KAAD,CAAgBE,MAAOT,EAAvB,UACE,UAAC,KAAD,YACE,SAACU,EAAA,EAAD,CACEC,MAAM,QACNC,GAAG,YACHC,KAAK,YACLC,YAAY,gBACZC,SAAS,GACTC,KAAK,WAEP,SAACN,EAAA,EAAD,CACEC,MAAM,WACNC,GAAG,eACHC,KAAK,eACLC,YAAY,iBACZC,SAAS,4BACTC,KAAK,cAGP,UAAC,KAAD,YACE,SAAC,KAAD,CAAcA,KAAK,SAAnB,SAA4B,aAC5B,SAAC,KAAD,CAAMC,GAAI,YAAV,SAAwB,sBAKjC,E,oBClEYC,EAAY,WAGvB,OADuBC,EAAAA,EAAAA,IAAYC,EAAAA,KACT,SAAC,KAAD,CAAUH,GAAG,eAIrC,SAACI,EAAA,EAAD,CAASC,MAAO,0BAAhB,UACE,SAAChC,EAAD,KAGL,EAED,G","sources":["components/Forms/FormLogin/FormLogin.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useFormik, FormikProvider, Form } from 'formik';\nimport * as Yup from 'yup';\n\nimport { loginUserThunk } from '../../../redux/operationsAuth'\n\n//style\nimport { TextInputLiveFeedback } from 'components/Forms/TextInputLiveFeedback/TextInputLiveFeedback';\nimport { ButtonSaveContact as ButtonSignIn, ButtonsBox } from '../Buttons.styles';\nimport { Link } from '../Forms.styled';\nexport const FormLogin = () => {\n  const dispatch = useDispatch()\n\n\n  const handleSubmit = async (values) => {\n    const { userEmail:email, userPassword:password } = values;\n   \n    dispatch(\n      loginUserThunk({\n        email,\n        password,\n    }));\n  }\n\n  // ==== configForm\n  const configFormik = useFormik({\n    initialValues: { \n      userEmail: \"\", \n      userPassword: \"\", \n    },\n    onSubmit: async (values) => handleSubmit(values),\n    validationSchema: Yup.object({\n\n      userEmail: Yup.string()\n        .matches(\n          /^[\\w._%+-]+@[\\w.-]+\\.[A-Za-z]{2,}$/i,\n          'Invalid email address'\n        )\n        .required('Email is required'),\n\n      userPassword: Yup.string()\n        .min(7, 'Must be at least 7 characters')\n        .required('Password is required'),\n    }),\n  });\n\n  return (\n    <FormikProvider value={configFormik}>\n      <Form>\n        <TextInputLiveFeedback\n          label=\"Email\"\n          id=\"userEmail\"\n          name=\"userEmail\"\n          placeholder=\"user@mail.com\" \n          helpText=\"\"\n          type=\"email\"\n        />\n        <TextInputLiveFeedback\n          label=\"Password\"\n          id=\"userPassword\"\n          name=\"userPassword\"\n          placeholder=\"Enter password\" \n          helpText=\"Must be more 7 characters\"\n          type=\"password\"\n        />\n        \n        <ButtonsBox>\n          <ButtonSignIn type=\"submit\">Sing In</ButtonSignIn>\n          <Link to={'/register'} >Go Sing Up</Link>\n        </ButtonsBox>\n      </Form>\n    </FormikProvider>\n  );\n}","import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { FormLogin } from \"components/Forms/FormLogin/FormLogin\"\nimport {selectAuthetification} from 'redux/selectors';\nimport { Section } from \"components/Section/Section\"\n\nexport const LoginPage = () => { \n  \n  const authetificated = useSelector(selectAuthetification);\n  if(authetificated) return <Navigate to='/contacts' />\n\n\n  return(\n    <Section title={'Login Into Your Account'}>\n      <FormLogin />\n    </Section>\n  )\n}\n\nexport default LoginPage"],"names":["FormLogin","dispatch","useDispatch","handleSubmit","values","email","userEmail","password","userPassword","loginUserThunk","configFormik","useFormik","initialValues","onSubmit","validationSchema","Yup","matches","required","min","value","TextInputLiveFeedback","label","id","name","placeholder","helpText","type","to","LoginPage","useSelector","selectAuthetification","Section","title"],"sourceRoot":""}