{"version":3,"file":"static/js/830.12b3240b.chunk.js","mappings":"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","sources":["components/Forms/FormContact/FormContact.jsx","components/Forms/Search/Search.jsx","../node_modules/@emotion/react/dist/emotion-react.browser.esm.js","components/Phonebook/Filter/Filter.styled.jsx","../node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Contact/Contact.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Phonebook/Contact/Contact.jsx","components/Phonebook/ContactsList/ContactsList.styled.jsx","components/Phonebook/ContactsList/ContactsList.jsx","components/Phonebook/Phonebook.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { Form, FormikProvider, useFormik } from \"formik\";\r\nimport * as Yup from 'yup';\r\n\r\nimport { addContactThunk, updateContactThunk } from \"redux/contactsOperations\";\r\nimport { selectContacts, } from \"redux/selectors\";\r\n\r\n// style\r\n//import { FieldBox, FieldLabel, FieldPosition, FieldInput, } from \"../Forms.styled\"\r\nimport { ButtonSaveContact as ButtonReset, ButtonSaveContact, ButtonsBox, } from '../Buttons.styles';\r\nimport { TextInputLiveFeedback } from \"../TextInputLiveFeedback/TextInputLiveFeedback\";\r\n\r\n\r\nexport const FormContact = ({contact, onClose}) => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectContacts);\r\n \r\n  // onSubmit\r\n  const handleSubmit = values => {\r\n    if(contact.id) {\r\n      handleUpdate(values);\r\n      return\r\n    }\r\n\r\n    handleNewSave(values);\r\n  }\r\n\r\n  // Update\r\n  const handleUpdate = values => {\r\n    const {contactName:name, contactNumber:number} = values;\r\n\r\n    dispatch(updateContactThunk({\r\n      id: contact.id,\r\n      name, \r\n      number,\r\n      selected: contact.selected,\r\n    })).then(\r\n      toast.success(`${name} - Update in phonebook`)\r\n    );\r\n    \r\n    onClose?.();\r\n  }\r\n\r\n\r\n  // Save New\r\n  const handleNewSave = values => {\r\n    const {contactName:name, contactNumber:number} = values;\r\n\r\n    const isFound = (name) => {\r\n      const findName = name.trim().toLowerCase();\r\n\r\n      return contacts.some(item => item.name.toLowerCase() === findName)\r\n    }\r\n    \r\n    if (isFound(name)) {\r\n      toast.error(`${name} - find in phonebook base`);\r\n      return;\r\n    }\r\n\r\n    dispatch(addContactThunk({\r\n      name: name, \r\n      number: number\r\n    }));\r\n\r\n    toast.success(`${name} - Add in phonebook`);\r\n    onClose?.();\r\n  }\r\n\r\n  // ==== configFormik\r\n  const nameRegExp = \"^[a-zA-Zа-яА-ЯіІїЇєЄ]+(([' \\\\-][a-zA-Zа-яА-ЯіІїЇєЄ])?[a-zA-Zа-яА-ЯіІїЇєЄ]*)*$\"\r\n  const phoneRegExp=\"\\\\+?\\\\d{1,4}?[\\\\-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,9}\"\r\n  \r\n  const configFormik = useFormik({\r\n    initialValues: { \r\n      contactName: contact.name, \r\n      contactNumber: contact.number, \r\n    },\r\n    onSubmit: async (values) => handleSubmit(values),\r\n    validationSchema: Yup.object({\r\n\r\n      contactName: Yup.string()\r\n        .min(3, 'Must be at least 3 characters')\r\n        .max(40, 'Must be less than 40 characters')\r\n        .matches( nameRegExp, \"Wrong characters\")\r\n        .required('Username is required'),\r\n\r\n      contactNumber: Yup.string()\r\n        .matches( phoneRegExp, \"Wrong number\")\r\n        .required('Phone number is required'),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <FormikProvider value={configFormik}>\r\n      <Form>\r\n      <TextInputLiveFeedback\r\n          label=\"Contact Name\"\r\n          id=\"contactName\"\r\n          name=\"contactName\"\r\n          placeholder=\"Enter contact name\" \r\n          helpText=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          type=\"text\"\r\n        />\r\n        <TextInputLiveFeedback\r\n          label=\"Phone number\"\r\n          id=\"contactNumber\"\r\n          name=\"contactNumber\"\r\n          placeholder=\"+380-67-111-11-11\" \r\n          helpText=\"+380-67-111-11-11. Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          type=\"tel\"\r\n        />\r\n\r\n        <ButtonsBox>\r\n          <ButtonSaveContact type=\"submit\">\r\n            {contact.id ? 'Update': 'Save' }\r\n          </ButtonSaveContact>\r\n\r\n          { !contact.id &&\r\n            <ButtonReset type=\"reset\">Reset</ButtonReset>\r\n          }\r\n        </ButtonsBox>\r\n\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n\r\n\r\n","import { useDispatch } from \"react-redux\"; \r\n\r\nimport { setFindQuery } from \"redux/findQuerySlice\";\r\n\r\n// style\r\nimport { FieldBox, FieldLabel, FieldPosition, FieldInput } from \"../Forms.styled\"\r\n\r\n\r\nexport const Search = ({value}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSearchChange = (e) => {\r\n    const query = e.currentTarget.value.trim().toLowerCase();\r\n    return dispatch(setFindQuery(query))\r\n  }\r\n\r\n  return (\r\n    <FieldBox>\r\n      <FieldLabel>Find contacts by name\r\n        <FieldPosition>\r\n          <FieldInput\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={handleSearchChange}\r\n          />\r\n        </FieldPosition>\r\n      </FieldLabel>\r\n    </FieldBox>\r\n  )\r\n}","import { h as hasOwnProperty, E as Emotion, c as createEmotionProps, w as withEmotionCache, T as ThemeContext, i as isBrowser$1 } from './emotion-element-c39617d8.browser.esm.js';\nexport { C as CacheProvider, T as ThemeContext, a as ThemeProvider, _ as __unsafe_useEmotionCache, u as useTheme, w as withEmotionCache, b as withTheme } from './emotion-element-c39617d8.browser.esm.js';\nimport * as React from 'react';\nimport { insertStyles, registerStyles, getRegisteredStyles } from '@emotion/utils';\nimport { useInsertionEffectWithLayoutFallback, useInsertionEffectAlwaysWithSyncFallback } from '@emotion/use-insertion-effect-with-fallbacks';\nimport { serializeStyles } from '@emotion/serialize';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\n\nvar pkg = {\n\tname: \"@emotion/react\",\n\tversion: \"11.11.1\",\n\tmain: \"dist/emotion-react.cjs.js\",\n\tmodule: \"dist/emotion-react.esm.js\",\n\tbrowser: {\n\t\t\"./dist/emotion-react.esm.js\": \"./dist/emotion-react.browser.esm.js\"\n\t},\n\texports: {\n\t\t\".\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./dist/emotion-react.worker.esm.js\",\n\t\t\t\tbrowser: \"./dist/emotion-react.browser.esm.js\",\n\t\t\t\t\"default\": \"./dist/emotion-react.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./dist/emotion-react.cjs.mjs\",\n\t\t\t\"default\": \"./dist/emotion-react.cjs.js\"\n\t\t},\n\t\t\"./jsx-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-runtime/dist/emotion-react-jsx-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-runtime/dist/emotion-react-jsx-runtime.cjs.js\"\n\t\t},\n\t\t\"./_isolated-hnrs\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.worker.esm.js\",\n\t\t\t\tbrowser: \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js\",\n\t\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.mjs\",\n\t\t\t\"default\": \"./_isolated-hnrs/dist/emotion-react-_isolated-hnrs.cjs.js\"\n\t\t},\n\t\t\"./jsx-dev-runtime\": {\n\t\t\tmodule: {\n\t\t\t\tworker: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.worker.esm.js\",\n\t\t\t\tbrowser: \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.browser.esm.js\",\n\t\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.esm.js\"\n\t\t\t},\n\t\t\t\"import\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.mjs\",\n\t\t\t\"default\": \"./jsx-dev-runtime/dist/emotion-react-jsx-dev-runtime.cjs.js\"\n\t\t},\n\t\t\"./package.json\": \"./package.json\",\n\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\"./macro\": {\n\t\t\ttypes: {\n\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t},\n\t\t\t\"default\": \"./macro.js\"\n\t\t}\n\t},\n\ttypes: \"types/index.d.ts\",\n\tfiles: [\n\t\t\"src\",\n\t\t\"dist\",\n\t\t\"jsx-runtime\",\n\t\t\"jsx-dev-runtime\",\n\t\t\"_isolated-hnrs\",\n\t\t\"types/*.d.ts\",\n\t\t\"macro.*\"\n\t],\n\tsideEffects: false,\n\tauthor: \"Emotion Contributors\",\n\tlicense: \"MIT\",\n\tscripts: {\n\t\t\"test:typescript\": \"dtslint types\"\n\t},\n\tdependencies: {\n\t\t\"@babel/runtime\": \"^7.18.3\",\n\t\t\"@emotion/babel-plugin\": \"^11.11.0\",\n\t\t\"@emotion/cache\": \"^11.11.0\",\n\t\t\"@emotion/serialize\": \"^1.1.2\",\n\t\t\"@emotion/use-insertion-effect-with-fallbacks\": \"^1.0.1\",\n\t\t\"@emotion/utils\": \"^1.2.1\",\n\t\t\"@emotion/weak-memoize\": \"^0.3.1\",\n\t\t\"hoist-non-react-statics\": \"^3.3.1\"\n\t},\n\tpeerDependencies: {\n\t\treact: \">=16.8.0\"\n\t},\n\tpeerDependenciesMeta: {\n\t\t\"@types/react\": {\n\t\t\toptional: true\n\t\t}\n\t},\n\tdevDependencies: {\n\t\t\"@definitelytyped/dtslint\": \"0.0.112\",\n\t\t\"@emotion/css\": \"11.11.0\",\n\t\t\"@emotion/css-prettifier\": \"1.1.3\",\n\t\t\"@emotion/server\": \"11.11.0\",\n\t\t\"@emotion/styled\": \"11.11.0\",\n\t\t\"html-tag-names\": \"^1.1.2\",\n\t\treact: \"16.14.0\",\n\t\t\"svg-tag-names\": \"^1.1.1\",\n\t\ttypescript: \"^4.5.5\"\n\t},\n\trepository: \"https://github.com/emotion-js/emotion/tree/main/packages/react\",\n\tpublishConfig: {\n\t\taccess: \"public\"\n\t},\n\t\"umd:main\": \"dist/emotion-react.umd.min.js\",\n\tpreconstruct: {\n\t\tentrypoints: [\n\t\t\t\"./index.js\",\n\t\t\t\"./jsx-runtime.js\",\n\t\t\t\"./jsx-dev-runtime.js\",\n\t\t\t\"./_isolated-hnrs.js\"\n\t\t],\n\t\tumdName: \"emotionReact\",\n\t\texports: {\n\t\t\tenvConditions: [\n\t\t\t\t\"browser\",\n\t\t\t\t\"worker\"\n\t\t\t],\n\t\t\textra: {\n\t\t\t\t\"./types/css-prop\": \"./types/css-prop.d.ts\",\n\t\t\t\t\"./macro\": {\n\t\t\t\t\ttypes: {\n\t\t\t\t\t\t\"import\": \"./macro.d.mts\",\n\t\t\t\t\t\t\"default\": \"./macro.d.ts\"\n\t\t\t\t\t},\n\t\t\t\t\t\"default\": \"./macro.js\"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return React.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  createElementArgArray[1] = createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return React.createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false; // maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\n\nvar Global = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n  var serialized = serializeStyles([styles], undefined, React.useContext(ThemeContext));\n\n  if (!isBrowser$1) {\n    var _ref;\n\n    var serializedNames = serialized.name;\n    var serializedStyles = serialized.styles;\n    var next = serialized.next;\n\n    while (next !== undefined) {\n      serializedNames += ' ' + next.name;\n      serializedStyles += next.styles;\n      next = next.next;\n    }\n\n    var shouldCache = cache.compat === true;\n    var rules = cache.insert(\"\", {\n      name: serializedNames,\n      styles: serializedStyles\n    }, cache.sheet, shouldCache);\n\n    if (shouldCache) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"style\", (_ref = {}, _ref[\"data-emotion\"] = cache.key + \"-global \" + serializedNames, _ref.dangerouslySetInnerHTML = {\n      __html: rules\n    }, _ref.nonce = cache.sheet.nonce, _ref));\n  } // yes, i know these hooks are used conditionally\n  // but it is based on a constant that will never change at runtime\n  // it's effectively like having two implementations and switching them out\n  // so it's not actually breaking anything\n\n\n  var sheetRef = React.useRef();\n  useInsertionEffectWithLayoutFallback(function () {\n    var key = cache.key + \"-global\"; // use case of https://github.com/emotion-js/emotion/issues/2675\n\n    var sheet = new cache.sheet.constructor({\n      key: key,\n      nonce: cache.sheet.nonce,\n      container: cache.sheet.container,\n      speedy: cache.sheet.isSpeedy\n    });\n    var rehydrating = false; // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion=\\\"\" + key + \" \" + serialized.name + \"\\\"]\");\n\n    if (cache.sheet.tags.length) {\n      sheet.before = cache.sheet.tags[0];\n    }\n\n    if (node !== null) {\n      rehydrating = true; // clear the hash so this node won't be recognizable as rehydratable by other <Global/>s\n\n      node.setAttribute('data-emotion', key);\n      sheet.hydrate([node]);\n    }\n\n    sheetRef.current = [sheet, rehydrating];\n    return function () {\n      sheet.flush();\n    };\n  }, [cache]);\n  useInsertionEffectWithLayoutFallback(function () {\n    var sheetRefCurrent = sheetRef.current;\n    var sheet = sheetRefCurrent[0],\n        rehydrating = sheetRefCurrent[1];\n\n    if (rehydrating) {\n      sheetRefCurrent[1] = false;\n      return;\n    }\n\n    if (serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(cache, serialized.next, true);\n    }\n\n    if (sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = sheet.tags[sheet.tags.length - 1].nextElementSibling;\n      sheet.before = element;\n      sheet.flush();\n    }\n\n    cache.insert(\"\", serialized, sheet, false);\n  }, [cache, serialized.name]);\n  return null;\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Global.displayName = 'EmotionGlobal';\n}\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            if (process.env.NODE_ENV !== 'production' && arg.styles !== undefined && arg.name !== undefined) {\n              console.error('You have passed styles created with `css` from `@emotion/react` package to the `cx`.\\n' + '`cx` is meant to compose class names (strings) so you should convert those styles to a class name by passing them to the `css` received from <ClassNames/> component.');\n            }\n\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Insertion = function Insertion(_ref) {\n  var cache = _ref.cache,\n      serializedArr = _ref.serializedArr;\n  useInsertionEffectAlwaysWithSyncFallback(function () {\n\n    for (var i = 0; i < serializedArr.length; i++) {\n      insertStyles(cache, serializedArr[i], false);\n    }\n  });\n\n  return null;\n};\n\nvar ClassNames = /* #__PURE__ */withEmotionCache(function (props, cache) {\n  var hasRendered = false;\n  var serializedArr = [];\n\n  var css = function css() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('css can only be used during render');\n    }\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    serializedArr.push(serialized); // registration has to happen here as the result of this might get consumed by `cx`\n\n    registerStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var cx = function cx() {\n    if (hasRendered && process.env.NODE_ENV !== 'production') {\n      throw new Error('cx can only be used during render');\n    }\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  var content = {\n    css: css,\n    cx: cx,\n    theme: React.useContext(ThemeContext)\n  };\n  var ele = props.children(content);\n  hasRendered = true;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Insertion, {\n    cache: cache,\n    serializedArr: serializedArr\n  }), ele);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  ClassNames.displayName = 'EmotionClassNames';\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var isBrowser = \"object\" !== 'undefined'; // #1727, #2905 for some reason Jest and Vitest evaluate modules twice if some consuming module gets mocked\n\n  var isTestEnv = typeof jest !== 'undefined' || typeof vi !== 'undefined';\n\n  if (isBrowser && !isTestEnv) {\n    // globalThis has wide browser support - https://caniuse.com/?search=globalThis, Node.js 12 and later\n    var globalContext = // $FlowIgnore\n    typeof globalThis !== 'undefined' ? globalThis // eslint-disable-line no-undef\n    : isBrowser ? window : global;\n    var globalKey = \"__EMOTION_REACT_\" + pkg.version.split('.')[0] + \"__\";\n\n    if (globalContext[globalKey]) {\n      console.warn('You are loading @emotion/react when it is already loaded. Running ' + 'multiple instances may cause problems. This can happen if multiple ' + 'versions are used, or if multiple builds of the same version are ' + 'used.');\n    }\n\n    globalContext[globalKey] = true;\n  }\n}\n\nexport { ClassNames, Global, jsx as createElement, css, jsx, keyframes };\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const Btn = styled.button`\r\n  display: inline-flex;\r\n  padding: 8px 12px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  \r\n  font: inherit;\r\n  text-transform: capitalize;\r\n\r\n  cursor: pointer;\r\n  background-color: #e2e5e8;\r\n  color: black;\r\n\r\n  &:hover, &:active {\r\n    cursor: pointer;\r\n    background-color: #1976d2;\r\n    color: #fff;\r\n  }\r\n\r\n  &:active {\r\n    background-color: tomato;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);;\r\n  }\r\n`\r\nexport const FilterBox = styled.div`\r\n  display: flex;\r\n  gap: 4px;\r\n  margin-top: 12px;\r\n`","import * as ReactJSXRuntime from 'react/jsx-runtime';\nimport { h as hasOwnProperty, E as Emotion, c as createEmotionProps } from '../../dist/emotion-element-c39617d8.browser.esm.js';\nimport 'react';\nimport '@emotion/cache';\nimport '@babel/runtime/helpers/extends';\nimport '@emotion/weak-memoize';\nimport '../../_isolated-hnrs/dist/emotion-react-_isolated-hnrs.browser.esm.js';\nimport 'hoist-non-react-statics';\nimport '@emotion/utils';\nimport '@emotion/serialize';\nimport '@emotion/use-insertion-effect-with-fallbacks';\n\nvar Fragment = ReactJSXRuntime.Fragment;\nfunction jsx(type, props, key) {\n  if (!hasOwnProperty.call(props, 'css')) {\n    return ReactJSXRuntime.jsx(type, props, key);\n  }\n\n  return ReactJSXRuntime.jsx(Emotion, createEmotionProps(type, props), key);\n}\nfunction jsxs(type, props, key) {\n  if (!hasOwnProperty.call(props, 'css')) {\n    return ReactJSXRuntime.jsxs(type, props, key);\n  }\n\n  return ReactJSXRuntime.jsxs(Emotion, createEmotionProps(type, props), key);\n}\n\nexport { Fragment, jsx, jsxs };\n","/** @jsxImportSource @emotion/react */\r\nimport { css } from \"@emotion/react\";\r\nimport { useSelector, useDispatch } from \"react-redux\"; \r\n\r\n\r\nimport { statusFilters } from \"redux/constants\"; \r\nimport { selectStatusFilter } from \"redux/selectors\";\r\nimport { setStatusFilter } from \"redux/filtersSlice\";\r\n\r\nimport { Btn, FilterBox } from \"./Filter.styled\";\r\n\r\n\r\nexport const Filter = () => { \r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(selectStatusFilter);\r\n\r\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\r\n  // const handleSearchChange = query => dispatch(searchContact(query))\r\n\r\n\r\n  const isSelectedStyle = css({\r\n    backgroundColor: '#1976d2',\r\n    color: '#fff',\r\n  });\r\n\r\n  const btn = Object.keys(statusFilters)\r\n  return (\r\n    <FilterBox>\r\n      {\r\n        btn.map((item, index) => {\r\n          const isSelected = (filter === statusFilters[item]);\r\n          \r\n          return (<Btn \r\n              css={ isSelected && isSelectedStyle }\r\n              key={`${index}-${item}`}\r\n              selected={isSelected}\r\n              onClick={() => handleFilterChange(statusFilters[item])}\r\n            >\r\n              {item}\r\n            </Btn>\r\n          )}\r\n        )\r\n      }\r\n    </FilterBox>\r\n  );\r\n  \r\n}\r\n\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Card = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 4px;\r\n  padding: 8px 8px;\r\n`\r\n\r\nexport const FieldContact = styled.div`\r\n  width: 100%;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  display: flex;\r\n  align-content: center;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  flex-wrap: nowrap;\r\n`\r\n\r\nexport const FieldNumber = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n`\r\n\r\nexport const FieldName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  flex-wrap: nowrap;\r\n`\r\n\r\nexport const Name = styled.p`\r\n  margin: 0;\r\n  padding: 2px 8px;\r\n`\r\n\r\nexport const Number = styled.p`\r\n  margin: 0;\r\n  padding: 2px 8px;\r\n`\r\n\r\nexport const Checkbox = styled.input`\r\n  width: 18px;\r\n  height: 18px;\r\n  cursor: pointer;\r\n`\r\n","import styled from \"@emotion/styled\";\r\nimport {Button} from \"../Forms/Buttons.styles\"\r\n/*\r\n * Стили компонента Modal\r\n */\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 100;\r\n`\r\n\r\nexport const BoxModal = styled.div`\r\n  position: relative;\r\n  max-width: calc(100vw - 36px);\r\n  width: 270px;\r\n  padding-top: 68px;\r\n  padding-bottom: 36px;\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n  background-color: var(--color-bg);\r\n`\r\n\r\nexport const ModalButtonClose = styled(Button)`\r\n  position: absolute;\r\n  top: 18px;\r\n  right: 12px;\r\n  border-radius: 4px;\r\n  color: var(--color-text);\r\n  background-color: var(--color-bg);\r\n`\r\n\r\nexport const ModalTitle = styled.div`\r\n  position: absolute;\r\n  top: 24px;\r\n  left: 0;\r\n  width: calc(100% - 24px);\r\n  padding-left: 12px;\r\n  font-weight: var(--fw-normal);\r\n  color: var(--color-text);\r\n  background-color: var(--color-bg);\r\n`\r\n\r\nexport const ModalImage = styled.img`\r\n  width: 100%;\r\n  height: calc(100vh - 48px);\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n`\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\n// import { Loader } from \"components/Loader/Loader\";\r\nimport { MdClose } from 'react-icons/md';\r\n\r\n// style\r\nimport { Overlay, BoxModal, ModalButtonClose, ModalImage, ModalTitle, } from \"./Modal.styled\";\r\n\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport class Modal extends Component {\r\n  \r\n  state = {\r\n    loaded: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n\r\n    this.setState({ loaded: true });\r\n  }\r\n\r\n  onLoadedLargeImage = () => {\r\n    this.setState({ loaded: false });\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown)\r\n  }\r\n\r\n\r\n  // close modal for press in ESC\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      // console.log(\"You press ESC\");\r\n      this.props.onClose();\r\n    }\r\n  }\r\n\r\n  \r\n  // close modal for click in backdrop || button\r\n  handleBackdropClick = e => { \r\n    if (e.currentTarget === e.target) { \r\n       this.props.onClose();\r\n    }\r\n  }\r\n\r\n  handleCloseButtonClick = e => { \r\n    this.props.onClose();\r\n  }\r\n\r\n  render() {\r\n    const { children, src='', title='' } = this.props;\r\n    // const { loaded } = this.state;\r\n    \r\n    return createPortal(\r\n      <Overlay onClick={ this.handleBackdropClick }>\r\n       \r\n        <BoxModal>\r\n          { title && \r\n            <ModalTitle>\r\n              { title }\r\n            </ModalTitle>\r\n          }\r\n          \r\n          { children }\r\n\r\n          { src && (<ModalImage onLoad={  this.onLoadedLargeImage } src={ src } alt={ title } /> )}\r\n\r\n          <ModalButtonClose type=\"button\" onClick={ this.handleCloseButtonClick }>\r\n            <MdClose size={12} />\r\n          </ModalButtonClose>\r\n\r\n\r\n        </BoxModal>\r\n      \r\n      </Overlay>\r\n    , modalRoot)\r\n  };\r\n}\r\n\r\nModal.propTypes = {\r\n  src : PropTypes.string,\r\n  title: PropTypes.string,\r\n  onClose : PropTypes.func.isRequired,\r\n};","import { useDispatch } from 'react-redux';\r\nimport { MdClose, MdEdit, MdAccountBox, MdOutlinePhoneAndroid,} from 'react-icons/md';\r\nimport PropTypes from 'prop-types'; // ES6'\r\n\r\nimport { deleteContactThunk, } from \"redux/contactsOperations\";\r\n\r\nimport { Card, Name, Checkbox, Number, FieldContact, FieldName, FieldNumber } from './Contact.styled';\r\nimport { ButtonDelete, ButtonEdit } from '../../Forms/Buttons.styles';\r\nimport { useState } from 'react';\r\nimport { Modal } from 'components/Modal/Modal';\r\nimport { FormContact } from 'components/Forms/FormContact/FormContact';\r\nimport { toggleCompleted } from 'redux/contactsSlice';\r\n\r\nexport const Contact = ({contact}) => {\r\n  const dispatch = useDispatch();\r\n  const {id, name, number, selected=false} = contact;\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleDelete = () => dispatch(deleteContactThunk(id));\r\n  // const handleToggle = () => dispatch(toggleCompletedThunk(contact));\r\n  const handleToggle = () => dispatch(toggleCompleted(contact));\r\n  const handleEdit = () => { toggleModal() };\r\n\r\n  // відкриття / закриття модалки\r\n  const toggleModal = () => {\r\n    setShowModal( !showModal );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n\r\n      <label>\r\n        <Checkbox \r\n          type=\"checkbox\"\r\n          checked={ selected }\r\n          onChange={ handleToggle } \r\n        />\r\n      </label>\r\n\r\n      <FieldContact>\r\n        <FieldName>\r\n          <MdAccountBox size={18} />\r\n          <Name> { name } </Name>\r\n        </FieldName>\r\n    \r\n        <FieldNumber>\r\n          <MdOutlinePhoneAndroid size={18} />\r\n          <Number> { number } </Number>\r\n        </FieldNumber>\r\n      </FieldContact>\r\n\r\n      <ButtonEdit type=\"button\" onClick={ handleEdit }>\r\n        <MdEdit size={18} /> \r\n      </ButtonEdit>\r\n\r\n      <ButtonDelete type=\"button\" onClick={ handleDelete }>\r\n        <MdClose size={18} />\r\n      </ButtonDelete>\r\n\r\n      { showModal && (\r\n          <Modal\r\n            title={'Edit/Update'}\r\n            onClose={ toggleModal }\r\n          >\r\n            <FormContact \r\n              contact={contact} \r\n              onClose={ toggleModal }\r\n            />\r\n          </Modal> \r\n        )}\r\n     \r\n    </Card>\r\n  )\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n      selected: PropTypes.bool,\r\n    }).isRequired\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const ListContacts = styled.ul`\r\n  text-decoration: none;\r\n  margin: 0;\r\n  padding-left: 0;\r\n  list-style: none;\r\n  overflow-y: auto;\r\n  width: 100%;\r\n  max-height: calc(100vh - 391px); // 70+16+50+30-16+32+16+104+16+27+16+30+30=391\r\n  min-height: 240px;\r\n`\r\nexport const ListItem = styled.li`\r\n  background-color: lightsteelblue;\r\n\r\n  &:nth-of-type(odd) {\r\n    background-color: lightcyan;\r\n  }\r\n`\r\n\r\nexport const WarningBox = styled.div`\r\n  width: 100%;\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  color: orangered;\r\n`\r\n\r\nexport const ItemButton = styled.button`\r\n  display: inline-block;\r\n  outline: 1px solid black;\r\n  border: none;\r\n  min-width: 75px;\r\n  height: 24px;\r\n  margin: 0;\r\n  padding: 0;\r\n  margin-right: 10px;\r\n  border-radius: 5px;\r\n\r\n  &:hover, &:active {\r\n    cursor: pointer;\r\n    background-color: cyan;\r\n    border: 1px solit black;\r\n  }\r\n\r\n  &:active {\r\n    background-color: tomato;\r\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);;\r\n  }\r\n`\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport { selectVisibleContacts } from 'redux/selectors';\r\nimport { Contact } from '../Contact/Contact';\r\nimport { WarningBox, ListContacts, ListItem, } from './ContactsList.styled';\r\n\r\n\r\nexport const ContactsList = () => {\r\n  const visibleContacts = useSelector(selectVisibleContacts);\r\n  const showContacts = Array.isArray(visibleContacts) && visibleContacts.length > 0;\r\n  \r\n  if (!showContacts) {\r\n    return (\r\n      <WarningBox>Sorry, you don't have more contacts</WarningBox>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ListContacts>\r\n      {\r\n        visibleContacts.map((item) =>\r\n          <ListItem key={ item.id }>\r\n            <Contact contact={ item } />\r\n          </ListItem>)\r\n      }\r\n    </ListContacts>\r\n  );\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { MdAddIcCall } from 'react-icons/md';\r\n\r\n\r\n// redux\r\nimport { requestContactsThunk } from \"redux/contactsOperations\";\r\nimport { selectError, selectLoading, selectAuthetification } from \"redux/selectors\";\r\n\r\n// components\r\nimport { Loader } from \"components/Loader/Loader\";\r\nimport { Section } from \"../Section/Section\";\r\nimport { FormContact } from \"../Forms/FormContact/FormContact\";\r\nimport { Search } from \"../Forms/Search/Search\";\r\nimport { Filter } from \"./Filter/Filter\";\r\nimport { ContactsList } from \"./ContactsList/ContactsList\";\r\nimport { Modal } from 'components/Modal/Modal';\r\n\r\n// style\r\nimport { ButtonAddContact, TextButton } from \"components/Forms/Buttons.styles\";\r\n\r\n\r\nexport const Phonebook = () => {\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  const loading = useSelector(selectLoading);\r\n  const error = useSelector(selectError);\r\n  const authetification = useSelector(selectAuthetification);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() =>  {\r\n    if (!authetification) return\r\n\r\n    dispatch(requestContactsThunk());\r\n  }, [dispatch, authetification]);\r\n\r\n  \r\n  const handleAddContact = () => {toggleModal()}\r\n  \r\n  // відкриття / закриття модалки\r\n  const toggleModal = () => {\r\n    setShowModal( !showModal );\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Section>\r\n        <ButtonAddContact onClick={handleAddContact}>\r\n          <TextButton>Add contact</TextButton>\r\n          <MdAddIcCall size={24} />\r\n        </ButtonAddContact>\r\n      </Section>\r\n\r\n      <Section>\r\n        <Search />\r\n        <Filter />\r\n      </Section>\r\n      \r\n      <Section title={\"Contacts\"}>\r\n\r\n        { loading && <Loader />}\r\n        { error && <p>Error... { error }</p>}\r\n        { loading && !error && <b>Request in progress...</b> }\r\n        \r\n        {!error && <ContactsList />}\r\n      </Section>\r\n      \r\n      { showModal && (\r\n          <Modal\r\n            title={'Add new'}\r\n            onClose={ toggleModal }\r\n          >\r\n            <FormContact contact={{name:\"\", number:\"\"}} onClose={ toggleModal }/>\r\n          </Modal> \r\n        )}\r\n    </>\r\n  )\r\n}\r\n","// import { useSelector } from 'react-redux';\r\n\r\n// import {selectAuthetification, } from 'redux/selectors';\r\nimport { Phonebook } from 'components/Phonebook/Phonebook';\r\n\r\nexport const ContactsPage = () => { \r\n\r\n  // const authetificated = useSelector(selectAuthetification);\r\n  // if (!authetificated) return;\r\n\r\n  return(\r\n      <Phonebook />\r\n  )\r\n}\r\n\r\nexport default ContactsPage"],"names":["FormContact","contact","onClose","dispatch","useDispatch","contacts","useSelector","selectContacts","handleSubmit","values","id","handleUpdate","handleNewSave","name","contactName","number","contactNumber","updateContactThunk","selected","then","toast","findName","trim","toLowerCase","some","item","isFound","addContactThunk","configFormik","useFormik","initialValues","onSubmit","validationSchema","Yup","min","max","matches","required","value","TextInputLiveFeedback","label","placeholder","helpText","type","Search","onChange","e","query","currentTarget","setFindQuery","css","_len","arguments","length","args","Array","_key","serializeStyles","Btn","styled","FilterBox","ReactJSXRuntime","jsx","props","key","hasOwnProperty","Emotion","createEmotionProps","Filter","filter","selectStatusFilter","isSelectedStyle","backgroundColor","color","btn","Object","keys","statusFilters","map","index","isSelected","onClick","setStatusFilter","handleFilterChange","Card","FieldContact","FieldNumber","FieldName","Name","Number","Checkbox","Overlay","BoxModal","ModalButtonClose","Button","ModalTitle","ModalImage","modalRoot","document","querySelector","Modal","state","loaded","onLoadedLargeImage","setState","handleKeyDown","code","handleBackdropClick","target","handleCloseButtonClick","window","addEventListener","this","removeEventListener","children","src","title","createPortal","onLoad","alt","size","Component","Contact","useState","showModal","setShowModal","toggleModal","checked","toggleCompleted","deleteContactThunk","ListContacts","ListItem","WarningBox","ContactsList","visibleContacts","selectVisibleContacts","isArray","Phonebook","loading","selectLoading","error","selectError","authetification","selectAuthetification","useEffect","requestContactsThunk","Section","Loader","ContactsPage"],"sourceRoot":""}