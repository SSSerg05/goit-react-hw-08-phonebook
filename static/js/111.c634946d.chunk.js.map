{"version":3,"file":"static/js/111.c634946d.chunk.js","mappings":"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","sources":["components/Forms/Buttons.styles.jsx","components/Forms/Forms.styled.jsx","components/Forms/TextInputLiveFeedback/TextInputLiveFeedback.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Forms/FormContact/FormContact.jsx","components/Phonebook/Search/Search.jsx","components/Phonebook/Filter/Filter.styled.jsx","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Contact/Contact.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Phonebook/Contact/Contact.jsx","components/Phonebook/ContactsList/ContactsList.styled.jsx","components/Phonebook/ContactsList/ContactsList.jsx","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/Phonebook.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  margin-right: 12px;\n  border: none;\n  border-radius: 4px;\n  background-color: transparent;\n  cursor: pointer;\n \n  &:hover {\n    color: white;\n    background-color: #f44336;\n  }\n\n  &:active {\n    color: white;\n    background-color: red;\n  }\n`\nexport const ButtonDelete = styled(Button)`\n  color: #f44336;\n`\n\nexport const ButtonEdit = styled(Button)`\n  color: #1976d2;\n`\n\nexport const ButtonAddContact = styled(Button)`\n  width: 150px;\n  justify-content: space-around;\n  color: green;\n  background-color: #e2e5e8;\n`\n\nexport const ButtonSaveContact = styled(Button)`\n  /* margin-top: 48px; */\n  width: 68px;\n  color: white;\n  background-color: #1976d2;\n`\n\nexport const ButtonsBox = styled.div`\n  margin-top: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n`","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\n\nconst colorsValid = { \n  error: 'red', \n  success: 'green', \n  valid: 'green', \n  invalid: 'red', \n}\n\nexport const FieldBox = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  position: relative;\n\n  margin-bottom: 1rem;\n  margin-top: 1rem;\n\n  color: ${(props) =>\n    colorsValid[props.valid] ?? 'black'}; \n`\n\nexport const FieldLabel = styled.label`\n  display: block;\n  width: 100%;\n`\n\nexport const FieldInput = styled.input`\n  display: block;\n  width: calc(100% - 2*4px);\n  outline: 1px solid  ${(props) =>\n    colorsValid[props.valid] ?? 'rgba(33, 33, 33, 0.2)'}; \n  background-color: transparent;\n  border-radius: 4px;\n  border: none;\n  margin-top: 4px;\n  padding: 8px 4px;\n\n  &:hover,\n  &:focus-within {\n    outline: 1px solid blue;\n    background-color: rgb(232, 240, 254);\n    transition: outline 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`\n\nexport const FieldPosition = styled.span`\n  position: relative;\n  margin-top: 4px;\n`\nexport const FieldFeedback = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  font-size: 0.875rem;\n`\nexport const FieldHelpText = styled.div`\n  /* position: absolute;\n  bottom: -14px;\n  left: 4px; */\n  padding-left: 4px;\n  padding-right: 4px;\n  font-size: 0.75rem;\n`\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n\n  padding: 0;\n  text-decoration: none;\n  \n  font-weight: 500;\n  border-radius: 4px;\n  border: none;\n  /* background-color: #1976d2; */\n  color:  #1976d2;;\n\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n  &:active {\n    color: red;\n  }\n`;","import React, { useState } from 'react';\nimport {useField } from 'formik';\n\n// style\nimport { \n  FieldBox, \n  FieldLabel, \n  FieldPosition, \n  FieldInput, \n  FieldHelpText, \n  FieldFeedback} from \"../Forms.styled\"\n\n\nexport const TextInputLiveFeedback = ({ label, helpText, ...props }) => {\n  const [field, meta] = useField(props);\n\n  // Show inline feedback if EITHER\n  // - the input is focused AND value is longer than 2 characters\n  // - or, the has been visited (touched === true)\n  const [didFocus, setDidFocus] = useState(false);\n  const handleFocus = () => setDidFocus(true);\n  const showFeedback =\n    (!!didFocus && field.value.trim().length > 2) || meta.touched;\n\n  return (\n      <FieldBox\n        valid = {showFeedback ? (meta.error ? 'error' : 'success') : 'default'}\n      >\n        \n        <FieldLabel htmlFor={props.id}>\n          { label } \n          \n          <FieldPosition >\n            \n            <FieldInput\n              valid = {showFeedback ? (meta.error ? 'invalid' : 'valid') : 'default'}\n              type=\"text\"\n              name=\"name\"\n              // pattern=\"^[a-zA-Zа-яА-ЯіІїЇєЄ]+(([' \\-][a-zA-Zа-яА-ЯіІїЇєЄ])?[a-zA-Zа-яА-ЯіІїЇєЄ]*)*$\"\n              // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              {...props}\n              {...field}\n              aria-describedby={`${props.id}-feedback ${props.id}-help`}\n              onFocus={handleFocus}\n            />\n\n          </FieldPosition>\n\n        </FieldLabel>\n        \n        { showFeedback && (\n          <FieldFeedback \n            id={`${props.id}-feedback`}\n            aria-live=\"polite\"\n          >\n            {meta.error ?? '✓'}\n          </FieldFeedback>\n        )}\n\n        <FieldHelpText\n          id={`${props.id}-help`}\n          tabIndex=\"-1\"\n        >\n          {helpText}\n        </FieldHelpText>\n\n      </FieldBox>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  min-width: 270px;\n  margin: 0;\n  padding: 0;\n  margin-bottom: 16px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  letter-spacing: 0.05rem;\n  text-align: center;\n`\n\nexport const SectionApp = styled.section`\n  margin-bottom: 16px;\n`","import PropTypes from 'prop-types'; // ES6'\nimport { Title, SectionApp } from './Section.styled';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionApp>\n      { title && <Title>{ title }</Title> }\n      { children }\n    </SectionApp>\n  );\n}\n\nSection.propTypes = {\n  title : PropTypes.string,\n}","import { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Form, FormikProvider, useFormik } from \"formik\";\nimport * as Yup from 'yup';\n\nimport { addContactThunk, updateContactThunk } from \"redux/operations\";\nimport { selectContacts, } from \"redux/selectors\";\n\n// style\n//import { FieldBox, FieldLabel, FieldPosition, FieldInput, } from \"../Forms.styled\"\nimport { ButtonSaveContact as ButtonReset, ButtonSaveContact, ButtonsBox, } from '../Buttons.styles';\nimport { TextInputLiveFeedback } from \"../TextInputLiveFeedback/TextInputLiveFeedback\";\n\n\nexport const FormContact = ({contact, onClose}) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n \n  // onSubmit\n  const handleSubmit = values => {\n    if(contact.id) {\n      handleUpdate(values);\n      return\n    }\n\n    handleNewSave(values);\n  }\n\n  // Update\n  const handleUpdate = values => {\n    const {contactName:name, contactNumber:number} = values;\n\n    dispatch(updateContactThunk({\n      id: contact.id,\n      name, \n      number,\n      selected: contact.selected,\n    }));\n    toast.success(`${name} - Update in phonebook`);\n    onClose?.();\n  }\n\n\n  // Save New\n  const handleNewSave = values => {\n    const {contactName:name, contactNumber:number} = values;\n\n    const isFound = (name) => {\n      const findName = name.trim().toLowerCase();\n\n      return contacts.some(item => item.name.toLowerCase() === findName)\n    }\n    \n    if (isFound(name)) {\n      toast.error(`${name} - find in phonebook base`);\n      return;\n    }\n\n    dispatch(addContactThunk({\n      name: name, \n      number: number\n    }));\n\n    toast.success(`${name} - Add in phonebook`);\n    onClose?.();\n  }\n\n  // ==== configFormik\n  const nameRegExp = \"^[a-zA-Zа-яА-ЯіІїЇєЄ]+(([' \\\\-][a-zA-Zа-яА-ЯіІїЇєЄ])?[a-zA-Zа-яА-ЯіІїЇєЄ]*)*$\"\n  const phoneRegExp=\"\\\\+?\\\\d{1,4}?[\\\\-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,4}[\\\\-.\\\\s]?\\\\d{1,9}\"\n  \n  const configFormik = useFormik({\n    initialValues: { \n      contactName: contact.name, \n      contactNumber: contact.number, \n    },\n    onSubmit: async (values) => handleSubmit(values),\n    validationSchema: Yup.object({\n\n      contactName: Yup.string()\n        .min(3, 'Must be at least 3 characters')\n        .max(40, 'Must be less than 40 characters')\n        .matches( nameRegExp, \"Wrong characters\")\n        .required('Username is required'),\n\n      contactNumber: Yup.string()\n        .matches( phoneRegExp, \"Wrong number\")\n        .required('Phone number is required'),\n    }),\n  });\n\n  return (\n    <FormikProvider value={configFormik}>\n      <Form>\n      <TextInputLiveFeedback\n          label=\"Contact Name\"\n          id=\"contactName\"\n          name=\"contactName\"\n          placeholder=\"Enter contact name\" \n          helpText=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          type=\"text\"\n        />\n        <TextInputLiveFeedback\n          label=\"Phone number\"\n          id=\"contactNumber\"\n          name=\"contactNumber\"\n          placeholder=\"+380-67-111-11-11\" \n          helpText=\"+380-67-111-11-11. Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          type=\"tel\"\n        />\n\n        <ButtonsBox>\n          <ButtonSaveContact type=\"submit\">\n            {contact.id ? 'Update': 'Save' }\n          </ButtonSaveContact>\n\n          { !contact.id &&\n            <ButtonReset type=\"reset\">Reset</ButtonReset>\n          }\n        </ButtonsBox>\n\n      </Form>\n    </FormikProvider>\n  );\n}\n\n\n","import { useDispatch } from \"react-redux\"; \n\nimport { setFindQuery } from \"redux/findQuerySlice\";\n\n// style\nimport { FieldBox, FieldLabel, FieldPosition, FieldInput } from \"../../Forms/Forms.styled\"\n\n\nexport const Search = ({value}) => {\n  const dispatch = useDispatch();\n\n  const handleSearchChange = (e) => {\n    const query = e.currentTarget.value.trim().toLowerCase();\n    return dispatch(setFindQuery(query))\n  }\n\n  return (\n    <FieldBox>\n      <FieldLabel>Find contacts by name\n        <FieldPosition>\n          <FieldInput\n            type=\"text\"\n            value={value}\n            onChange={handleSearchChange}\n          />\n        </FieldPosition>\n      </FieldLabel>\n    </FieldBox>\n  )\n}","import styled from \"@emotion/styled\";\n\n\nexport const Btn = styled.button`\n  display: inline-flex;\n  padding: 8px 12px;\n  border-radius: 4px;\n  border: none;\n  \n  font: inherit;\n  text-transform: capitalize;\n\n  cursor: pointer;\n  background-color: #e2e5e8;\n  color: black;\n\n  &:hover, &:active {\n    cursor: pointer;\n    background-color: #1976d2;\n    color: #fff;\n  }\n\n  &:active {\n    background-color: tomato;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);;\n  }\n`\nexport const FilterBox = styled.div`\n  display: flex;\n  gap: 4px;\n  margin-top: 12px;\n`","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { useSelector, useDispatch } from \"react-redux\"; \n\n\nimport { statusFilters } from \"redux/constants\"; \nimport { selectStatusFilter } from \"redux/selectors\";\nimport { setStatusFilter } from \"redux/filtersSlice\";\n\nimport { Btn, FilterBox } from \"./Filter.styled\";\n\n\nexport const Filter = () => { \n  const dispatch = useDispatch();\n  const filter = useSelector(selectStatusFilter);\n\n  const handleFilterChange = filter => dispatch(setStatusFilter(filter));\n  // const handleSearchChange = query => dispatch(searchContact(query))\n\n\n  const isSelectedStyle = css({\n    backgroundColor: '#1976d2',\n    color: '#fff',\n  });\n\n  const btn = Object.keys(statusFilters)\n  return (\n    <FilterBox>\n      {\n        btn.map((item, index) => {\n          const isSelected = (filter === statusFilters[item]);\n          \n          return (<Btn \n              css={ isSelected && isSelectedStyle }\n              key={`${index}-${item}`}\n              selected={isSelected}\n              onClick={() => handleFilterChange(statusFilters[item])}\n            >\n              {item}\n            </Btn>\n          )}\n        )\n      }\n    </FilterBox>\n  );\n  \n}\n\n","import styled from \"@emotion/styled\";\n\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n`\n\nexport const Name = styled.p`\n  width: 100%;\n  /* min-width: 200px; */\n  margin: 0;\n  padding: 4px;\n  flex-grow: 1;\n`\n// export const Button = styled.button`\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   width: 32px;\n//   height: 32px;\n//   padding: 0;\n//   margin: 0;\n//   margin-right: 12px;\n//   border: none;\n//   border-radius: 4px;\n//   background-color: transparent;\n//   cursor: pointer;\n \n//   &:hover {\n//     color: white;\n//     background-color: #f44336;\n//   }\n\n//   &:active {\n//     color: white;\n//     background-color: red;\n//   }\n// `\n// export const ButtonDelete = styled(Button)`\n//   color: #f44336;\n// `\n\n// export const ButtonEdit = styled(Button)`\n//   color: darkgray;\n// `\n\nexport const Checkbox = styled.input`\n  width: 24px;\n  height: 24px;\n  margin-left: 12px;\n  cursor: pointer;\n`\n","import styled from \"@emotion/styled\";\nimport {Button} from \"../Forms/Buttons.styles\"\n/*\n * Стили компонента Modal\n */\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 100;\n`\n\nexport const BoxModal = styled.div`\n  position: relative;\n  max-width: calc(100vw - 36px);\n  width: 270px;\n  padding-top: 68px;\n  padding-bottom: 36px;\n  padding-left: 12px;\n  padding-right: 12px;\n  background-color: white;\n`\n\nexport const ModalButtonClose = styled(Button)`\n  position: absolute;\n  top: 18px;\n  right: 0;\n  border-radius: 4px;\n  color: black;\n  background-color: #e2e5e8;\n`\n\nexport const ModalTitle = styled.div`\n  position: absolute;\n  bottom: 4px;\n  left: 12px;\n  width: calc(100% - 24px);\n  padding-left: 12px;\n  color: grey;\n  background-color: rgba(0, 0, 0, 0.6);\n`\n\nexport const ModalImage = styled.img`\n  width: 100%;\n  height: calc(100vh - 48px);\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\n// import PropTypes from 'prop-types';\n\n// import { Loader } from \"components/Loader/Loader\";\nimport { MdClose } from 'react-icons/md';\n\n// style\nimport { Overlay, BoxModal, ModalButtonClose, ModalImage, ModalTitle, } from \"./Modal.styled\";\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport class Modal extends Component {\n  \n  state = {\n    loaded: false,\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n\n    this.setState({ loaded: true });\n  }\n\n  onLoadedLargeImage = () => {\n    this.setState({ loaded: false });\n  }\n\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n\n  // close modal for press in ESC\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      // console.log(\"You press ESC\");\n      this.props.onClose();\n    }\n  }\n\n  \n  // close modal for click in backdrop || button\n  handleBackdropClick = e => { \n    if (e.currentTarget === e.target) { \n       this.props.onClose();\n    }\n  }\n\n  handleCloseButtonClick = e => { \n    this.props.onClose();\n  }\n\n  render() {\n    const { children, src='', title='' } = this.props;\n    const { loaded } = this.state;\n    \n    return createPortal(\n      <Overlay onClick={ this.handleBackdropClick }>\n       \n        <BoxModal>\n\n          {/* {loaded && <Loader /> } */}\n\n          { children }\n          { src && (<ModalImage onLoad={  this.onLoadedLargeImage } src={ src } alt={ title } /> )}\n\n            <ModalButtonClose type=\"button\" onClick={ this.handleCloseButtonClick }>\n              <MdClose size={12} />\n            </ModalButtonClose>\n\n          { !loaded && \n            <ModalTitle>\n              { title }\n            </ModalTitle>\n          }\n        </BoxModal>\n      \n      </Overlay>\n    , modalRoot)\n  };\n}\n\n// Modal.propTypes = {\n//   src : PropTypes.string.isRequired,\n//   title: PropTypes.string.isRequired,\n//   onClose : PropTypes.func.isRequired,\n// };","import { useDispatch } from 'react-redux';\nimport { MdClose, MdEdit } from 'react-icons/md';\nimport PropTypes from 'prop-types'; // ES6'\n\nimport { deleteContactThunk, toggleCompletedThunk, } from \"redux/operations\";\n\nimport { Card, Name, Checkbox } from './Contact.styled';\nimport { ButtonDelete, ButtonEdit } from '../../Forms/Buttons.styles';\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\nimport { FormContact } from 'components/Forms/FormContact/FormContact';\n\nexport const Contact = ({contact}) => {\n  const dispatch = useDispatch();\n  const {id, name, number, selected=false} = contact;\n\n  const [showModal, setShowModal] = useState(false);\n\n  const handleDelete = () => dispatch(deleteContactThunk(id));\n  const handleToggle = () => dispatch(toggleCompletedThunk(contact));\n\n  const handleEdit = () => {\n    toggleModal()\n  };\n\n  // відкриття / закриття модалки\n  const toggleModal = () => {\n    setShowModal( !showModal );\n  }\n\n  return (\n    <Card>\n\n      <label>\n        <Checkbox \n          type=\"checkbox\"\n          checked={ selected }\n          onChange={ handleToggle } \n        />\n      </label>\n\n      <Name>{ name + ': ' + number }</Name>\n\n      <ButtonEdit type=\"button\" onClick={ handleEdit }>\n        <MdEdit size={24} /> \n      </ButtonEdit>\n\n      <ButtonDelete type=\"button\" onClick={ handleDelete }>\n        <MdClose size={24} />\n      </ButtonDelete>\n\n      { showModal && (\n          <Modal\n            // src={ selectedImage }\n            // tags={ tagsSelectedImage }\n            onClose={ toggleModal }\n          >\n            <FormContact \n              contact={contact} \n              onClose={ toggleModal }\n            />\n          </Modal> \n        )}\n     \n    </Card>\n  )\n}\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  text-decoration: none;\n  margin: 0;\n  padding-left: 0;\n  list-style: none;\n  overflow-y: auto;\n  max-height: calc(100vh - 391px); // 70+16+50+30-16+32+16+104+16+27+16+30=391\n`\nexport const ListItem = styled.li`\n  background-color: lightsteelblue;\n\n  &:nth-of-type(odd) {\n    background-color: lightcyan;\n  }\n`\n\nexport const ItemButton = styled.button`\n  display: inline-block;\n  outline: 1px solid black;\n  border: none;\n  min-width: 75px;\n  height: 24px;\n  margin: 0;\n  padding: 0;\n  margin-right: 10px;\n  border-radius: 5px;\n\n  &:hover, &:active {\n    cursor: pointer;\n    background-color: cyan;\n    border: 1px solit black;\n  }\n\n  &:active {\n    background-color: tomato;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);;\n  }\n`\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from 'redux/selectors';\nimport { Contact } from '../Contact/Contact';\nimport { List, ListItem, } from './ContactsList.styled';\n\n\nexport const ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const showContacts = Array.isArray(visibleContacts) && visibleContacts.length > 0;\n  \n  if (!showContacts) {\n    return (\n      <p>Sorry, you don't have more contacts</p>\n    )\n  }\n\n  return (\n    <List>\n      {\n        visibleContacts.map((item) =>\n          <ListItem key={ item.id }>\n            <Contact contact={ item } />\n          </ListItem>)\n      }\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const DeskPhonebook = styled.div`\n  /* min-width: 270px; */\n  margin-top: 50px;\n  padding: 30px;\n  border: 1px solid black;\n`","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { MdAddIcCall } from 'react-icons/md';\n\n\n// redux\nimport { requestContactsThunk } from \"redux/operations\";\nimport { selectError, selectLoading, selectAuthetification } from \"redux/selectors\";\n\n// components\nimport { Loader } from \"components/Loader/Loader\";\nimport { Section } from \"../Section/Section\";\nimport { FormContact } from \"../Forms/FormContact/FormContact\";\nimport { Search } from \"./Search/Search\";\nimport { Filter } from \"./Filter/Filter\";\nimport { ContactsList } from \"./ContactsList/ContactsList\";\nimport { Modal } from 'components/Modal/Modal';\n\n// style\nimport { DeskPhonebook } from \"./Phonebook.styled\";\nimport { ButtonAddContact } from \"components/Forms/Buttons.styles\";\n\n\nexport const Phonebook = () => {\n  \n  const dispatch = useDispatch();\n\n  const loading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n  const authetification = useSelector(selectAuthetification);\n\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() =>  {\n    dispatch(requestContactsThunk());\n  }, [dispatch]);\n\n  if (!authetification) return;\n\n  const handleAddContact = () => {toggleModal()}\n  \n  // відкриття / закриття модалки\n  const toggleModal = () => {\n    setShowModal( !showModal );\n  }\n\n\n  return (\n    <DeskPhonebook>\n\n      <Section>\n        <ButtonAddContact onClick={handleAddContact}>\n          Add contact\n          <MdAddIcCall size={24} />\n        </ButtonAddContact>\n      </Section>\n\n      <Section>\n        <Search />\n        <Filter />\n      </Section>\n      \n      <Section title={\"Contacts\"}>\n\n        { loading && <Loader />}\n        { error && <p>Error... { error }</p>}\n        { loading && !error && <b>Request in progress...</b> }\n        \n        <ContactsList />\n      </Section>\n      \n      { showModal && (\n          <Modal\n            // src={ selectedImage }\n            // tags={ tagsSelectedImage }\n            onClose={ toggleModal }\n          >\n            <FormContact contact={{name:\"\", number:\"\"}} onClose={ toggleModal }/>\n          </Modal> \n        )}\n    </DeskPhonebook>\n  )\n}\n","import { useSelector } from 'react-redux';\n// import { Navigate } from 'react-router-dom';\n\nimport {selectAuthetification, } from 'redux/selectors';\n// import { Container } from \"components/App/App.styled\";\nimport { Phonebook } from 'components/Phonebook/Phonebook';\n\nexport const ContactsPage = () => { \n\n  const authetificated = useSelector(selectAuthetification);\n  if (!authetificated) return;\n\n  return(\n    // <Container>\n      <Phonebook />\n    // </Container>\n  )\n}\n\nexport default ContactsPage"],"names":["Button","styled","ButtonDelete","ButtonEdit","ButtonAddContact","ButtonSaveContact","ButtonsBox","colorsValid","error","success","valid","invalid","FieldBox","props","FieldLabel","FieldInput","FieldPosition","FieldFeedback","FieldHelpText","Link","NavLink","TextInputLiveFeedback","label","helpText","useField","field","meta","useState","didFocus","setDidFocus","showFeedback","value","trim","length","touched","htmlFor","id","type","name","required","onFocus","tabIndex","Title","SectionApp","Section","title","children","FormContact","contact","onClose","dispatch","useDispatch","contacts","useSelector","selectContacts","handleSubmit","values","handleUpdate","handleNewSave","contactName","number","contactNumber","updateContactThunk","selected","toast","findName","toLowerCase","some","item","isFound","addContactThunk","configFormik","useFormik","initialValues","onSubmit","validationSchema","Yup","min","max","matches","placeholder","Search","onChange","e","query","currentTarget","setFindQuery","Btn","FilterBox","Filter","filter","selectStatusFilter","isSelectedStyle","css","backgroundColor","color","btn","Object","keys","statusFilters","map","index","isSelected","onClick","setStatusFilter","handleFilterChange","Card","Name","Checkbox","Overlay","BoxModal","ModalButtonClose","ModalTitle","ModalImage","modalRoot","document","querySelector","Modal","state","loaded","onLoadedLargeImage","setState","handleKeyDown","code","handleBackdropClick","target","handleCloseButtonClick","window","addEventListener","this","removeEventListener","src","createPortal","onLoad","alt","size","Component","Contact","showModal","setShowModal","toggleModal","checked","toggleCompletedThunk","deleteContactThunk","List","ListItem","ContactsList","visibleContacts","selectVisibleContacts","Array","isArray","DeskPhonebook","Phonebook","loading","selectLoading","selectError","authetification","selectAuthetification","useEffect","requestContactsThunk","Loader","ContactsPage"],"sourceRoot":""}